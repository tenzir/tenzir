name: Changelog

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  add-comment:
    name: Add Comment
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Check for existing changelog entries and generate URLs
        id: check-and-generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          BRANCH="${{ github.event.pull_request.head.ref }}"
          BASE_REF="${{ github.event.pull_request.base.ref }}"

          # Check if any changelog entries were added in this PR
          CHANGELOG_FILES=$(git diff --name-only origin/$BASE_REF...HEAD | grep "^changelog/changes/" | wc -l)

          echo "changelog_entries_count=$CHANGELOG_FILES" >> $GITHUB_OUTPUT

          if [ "$CHANGELOG_FILES" -gt 0 ]; then
            echo "has_changelog_entries=true" >> $GITHUB_OUTPUT
          else
            echo "has_changelog_entries=false" >> $GITHUB_OUTPUT
          fi

          # Use the changelog/add.py script with --web option to generate URLs
          # Pass the PR number and branch explicitly to ensure it works correctly in CI
          CHANGE_URL=$(python3 changelog/add.py change --web --pr "$PR_NUMBER" --branch "$BRANCH")
          BUGFIX_URL=$(python3 changelog/add.py bugfix --web --pr "$PR_NUMBER" --branch "$BRANCH")
          FEATURE_URL=$(python3 changelog/add.py feature --web --pr "$PR_NUMBER" --branch "$BRANCH")

          echo "change_url=$CHANGE_URL" >> $GITHUB_OUTPUT
          echo "bugfix_url=$BUGFIX_URL" >> $GITHUB_OUTPUT
          echo "feature_url=$FEATURE_URL" >> $GITHUB_OUTPUT

      - name: Create or update comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          HAS_CHANGELOG="${{ steps.check-and-generate.outputs.has_changelog_entries }}"
          CHANGELOG_COUNT="${{ steps.check-and-generate.outputs.changelog_entries_count }}"

          if [ "$HAS_CHANGELOG" = "true" ]; then
            COMMENT_BODY="<!-- add-changelog-entry -->
          > [!NOTE]
          > üéâ **Great work!** This PR already includes $CHANGELOG_COUNT changelog $([ $CHANGELOG_COUNT -eq 1 ] && echo "entry" || echo "entries").
          >
          > If you need to add additional changelog entries, you can use the links below or run \`./changelog/add.py change|bugfix|feature\` on the command-line.

          | Type | Description | Link |
          |------|-------------|------|
          | üîÑ **Change** | Modifications to existing functionality | [Add Change](${{ steps.check-and-generate.outputs.change_url }}) |
          | üêõ **Bugfix** | Fixes for bugs or issues | [Add Bugfix](${{ steps.check-and-generate.outputs.bugfix_url }}) |
          | ‚ú® **Feature** | New functionality or enhancements | [Add Feature](${{ steps.check-and-generate.outputs.feature_url }}) |

          *This comment is automatically updated when the PR is modified.*"
          else
            COMMENT_BODY="<!-- add-changelog-entry -->
          > [!TIP]
          > Please add a changelog entry for this PR by clicking one of the links below.
          >
          > The changelog entry will be pre-filled with information from this PR. You can edit the title and description as needed before committing.
          >
          > You can also add a changelog entry manually by running \`./changelog/add.py change|bugfix|feature\` on the command-line.

          | Type | Description | Link |
          |------|-------------|------|
          | üîÑ **Change** | Modifications to existing functionality | [Add Change](${{ steps.check-and-generate.outputs.change_url }}) |
          | üêõ **Bugfix** | Fixes for bugs or issues | [Add Bugfix](${{ steps.check-and-generate.outputs.bugfix_url }}) |
          | ‚ú® **Feature** | New functionality or enhancements | [Add Feature](${{ steps.check-and-generate.outputs.feature_url }}) |

          *This comment is automatically updated when the PR is modified.*"
          fi

          # Check if a comment already exists
          COMMENT_ID=$(gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
            --jq '.[] | select(.body | startswith("<!-- add-changelog-entry -->")) | .id')

          if [ -n "$COMMENT_ID" ]; then
            # Update existing comment
            echo "Updating existing comment $COMMENT_ID"
            gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID \
              -X PATCH \
              -f body="$COMMENT_BODY"
          else
            # Create new comment
            echo "Creating new comment"
            gh api repos/${{ github.repository }}/issues/$PR_NUMBER/comments \
              -f body="$COMMENT_BODY"
          fi
