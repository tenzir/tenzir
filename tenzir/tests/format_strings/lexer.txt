   line_comment "// test: lexer"
        newline "\n"
        newline "\n"
   string_begin "\""
       char_seq "{}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "\\\""
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
     identifier "ident"
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
     identifier "a"
           plus "+"
     identifier "b"
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "pre "
      fmt_begin "{"
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "pre "
      fmt_begin "{"
        fmt_end "}"
       char_seq " post"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "pre "
      fmt_begin "{"
   string_begin "\""
       char_seq "string"
  closing_quote "\""
        fmt_end "}"
       char_seq " post"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "{{}}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
     whitespace " "
         lbrace "{"
         rbrace "}"
     whitespace " "
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "{{"
      fmt_begin "{"
        fmt_end "}"
       char_seq "}}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "{{{{}}}}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
       char_seq "{{"
      fmt_begin "{"
     whitespace " "
         lbrace "{"
     identifier "x"
          colon ":"
     whitespace " "
         scalar "42"
         rbrace "}"
        fmt_end "}"
       char_seq "}}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
     whitespace " "
         lbrace "{"
     identifier "key"
          colon ":"
     whitespace " "
   string_begin "\""
       char_seq "value"
  closing_quote "\""
         rbrace "}"
     whitespace " "
        fmt_end "}"
  closing_quote "\""
        newline "\n"
        newline "\n"
format_string_begin "f\""
      fmt_begin "{"
     whitespace " "
         lbrace "{"
     identifier "key"
          colon ":"
     whitespace " "
format_string_begin "f\""
       char_seq "pre2"
      fmt_begin "{"
     whitespace " "
         lbrace "{"
     identifier "key2"
          colon ":"
     whitespace " "
   string_begin "\""
       char_seq "string"
  closing_quote "\""
         rbrace "}"
     whitespace " "
        fmt_end "}"
  closing_quote "\""
         rbrace "}"
     whitespace " "
        fmt_end "}"
  closing_quote "\""
        newline "\n"
