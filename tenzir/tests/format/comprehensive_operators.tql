from {x: 1, y: 2}
where x > 0
select x, y
export
import
summarize count = count()
summarize by x
head 10
tail 5
drop y
select x = new_x
select z = x + y
select w = x * 2
select x = x + 1
deduplicate x
enumerate
batch 100
throttle 10/sec
cache
buffer 1000
sample 0.1
delay 5s
measure
taste
reverse
pass
discard
select flatten(this)
select unflatten(this)
fields
schemas
version
plugins
api "/status"
serve "test"
files
processes
sockets
python "self.x = self.y"
shell "echo test"
timeshift @import_time + 1h
decompress "gzip"
load_balance
repeat 3
fork
if true {
where x > 0
} else {
where x < 0
}
match x {
1 => {
select x
}
2 => {
select y
}
}
let $var = 42
assert x > 0