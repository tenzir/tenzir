from {
  x: 1,
  y: 2,
}
where x > count()
select x, y = now()
summarize total = sum(x), avg_val = mean(y)
select result = parse_json(data)
select computed = hash_md5(x)
select timestamp = now()
where field == to_upper(value)
select processed = to_lower(text)
summarize by x
head max(10, count())
tail min(5, count())
drop computed_field
select old_name = new_name
select json_data = parse_json(raw_data)
select parsed = parse_csv(csv_string)
select cleaned = trim(dirty_text)
where type_id(this) == "string"
select formatted = string(value)
summarize result = count(), first_val = first(x), last_val = last(y)
summarize by type_id(this)
deduplicate computed_field
enumerate with_index
batch 100
throttle 10/sec
sample 0.1
delay 5s
measure
taste 100
deduplicate computed_field
reverse
select nested_data = flatten(this)
select flat_data = unflatten(this)
fields
schemas
version
plugins
api "/status"
serve data
files
processes
sockets
python "self.x = self.y"
shell "echo hello"
timeshift @import_time + 1h
decompress "gzip"
load_balance
repeat 3
fork
cache results
buffer 1000
assert x > 0