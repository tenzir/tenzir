openapi: 3.0.0
info:
  title: Tenzir REST API
  version: '"v0"'
  description: >-
    This API can be used to interact with a Tenzir Node in a RESTful manner.


    All API requests must be authenticated with a valid token, which must be
    supplied in the `X-Tenzir-Token` request header. The token can be generated
    on the command-line using `tenzir-ctl web generate-token`.


    All endpoints are versioned, and must be prefixed with `/v0`.
servers:
  - url: https://tenzir.example.com/api/v0
security:
  - TenzirToken: []
components:
  schemas:
    Annotation:
      type: object
      properties:
        primary:
          type: boolean
        text:
          type: string
          example: this option does not exist
          description: A potentially empty label.
        source:
          $ref: '#/components/schemas/Location'
    CreateParameters:
      type: object
      required:
        - definition
      properties:
        id:
          type: string
          example: 08446737-da9b-4787-8599-97d85c48c3bb
          description: >-
            The id of the pipeline to be updated. If not provided, a random id
            will be generated.
        definition:
          type: string
          example: export | where foo | publish /bar
          description: The pipeline definition.
        name:
          type: string
          description: The human-readable name of the pipeline.
          default: '[an auto-generated id]'
          example: zeek-monitoring-pipeline
        hidden:
          type: boolean
          description: >
            A flag specifying whether this pipeline is hidden.

            Hidden pipelines start automatically, are not persisted, and will
            not show up in the /pipeline/list endpoint response.
          default: false
          example: false
        ttl:
          type: string
          description: |
            A duration string specifying the maximum time for this pipeline to
            exist. No value means the pipeline is allowed to exist forever.
            This parameter must be defined if the `hidden` parameter is true.
          default: null
          example: 5min
        autostart:
          $ref: '#/components/schemas/PipelineAutostart'
        autodelete:
          $ref: '#/components/schemas/PipelineAutodelete'
        retry_delay:
          type: string
          description: >
            A duration string specifying the minimum time between automatic
            restarts

            of a pipeline when an error occurs. Takes no effect if restarting on

            failure is disabled.
          default: 1min
          example: 500ms
        unstoppable:
          type: boolean
          description: >
            A flag specifying whether this pipeline is unstoppable.

            Unstoppable pipelines start automatically, fail when they complete,
            and can not be paused or stopped manually.
          default: false
          example: true
    Diagnostic:
      type: object
      properties:
        severity:
          type: string
          enum:
            - error
            - warning
            - note
        message:
          type: string
          example: unknown option `--frobnify`
        annotation:
          type: array
          items:
            $ref: '#/components/schemas/Annotation'
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        rendered:
          type: string
          example: "\e[1m\e[31merror\e[39m: unknown option `--frobnify`\e[0m\n"
    Diagnostics:
      type: array
      items:
        $ref: '#/components/schemas/Diagnostic'
    Launch Response For Pipeline With Explicit Sink:
      type: object
      properties:
        deployable:
          type: boolean
          description: Returns this property with the value `true`.
    Launch Response For Pipeline Without Explicit Sink:
      type: object
      properties:
        id:
          type: string
          description: >-
            (If the pipeline does not end with a predefined sink) The id of the
            successfully created pipeline.
    LaunchParameters:
      allOf:
        - $ref: '#/components/schemas/CreateParameters'
          type: null
          properties: null
        - $ref: null
          type: object
          properties:
            cache_id:
              type: string
              description: |
                The identifier for the `cache` operator, which is inserted only
                when this parameter is provided.
              example: 4ada2434-32asfe2s
            cache_capacity:
              type: integer
              description: The maximum number of events to keep in the `cache` operator.
              example: 4000
            cache_read_timeout:
              type: string
              description: >
                The time to live of the cache. Resets when reading from the
                cache.
              example: 1min
            cache_write_timeout:
              type: string
              description: >
                The maximum time to live of the cache. Unlike the
                `cache_read_timeout`

                parameter, this does not reset when reading from the cache.
              example: 1h
            serve_id:
              type: string
              description: The identifier for the `serve` operator.
              example: 4ada2434-32asfe2s
            serve_buffer_size:
              type: integer
              description: The maximum number of events to keep in the `serve` operator.
              example: 4000
    Location:
      type: object
      description: A region in the source code, defined by byte offsets.
      properties:
        begin:
          type: number
          example: 42
        end:
          type: number
          example: 48
    Note:
      type: object
      properties:
        kind:
          type: string
          enum:
            - note
            - usage
            - hint
            - docs
          example: usage
        message:
          type: string
          example: file <path> [-f|--follow] [-m|--mmap] [-t|--timeout <duration>]
    PipelineAutodelete:
      type: object
      description: Flags that specify on which state to delete the pipeline.
      properties:
        completed:
          type: boolean
          description: Autodelete the pipeline upon completion.
          default: false
          example: false
        failed:
          type: boolean
          description: Autodelete the pipeline upon failure.
          default: false
          example: true
        stopped:
          type: boolean
          description: Autodelete the pipeline when it stops before completing.
          default: false
          example: false
    PipelineAutostart:
      type: object
      description: Flags that specify on which state to restart the pipeline.
      properties:
        created:
          type: boolean
          description: Autostart the pipeline upon creation.
          default: false
          example: true
        completed:
          type: boolean
          description: Autostart the pipeline upon completion.
          default: false
          example: false
        failed:
          type: boolean
          description: Autostart the pipeline upon failure.
          default: false
          example: false
    PipelineInfo:
      type: object
      properties:
        id:
          type: string
          description: The pipeline id.
        name:
          type: string
          description: The human-readable name of the pipeline.
        definition:
          type: string
          description: The pipeline definition.
        unstoppable:
          type: boolean
          description: >
            A flag specifying whether this pipeline is unstoppable.

            Unstoppable pipelines start automatically, fail when they complete,
            and can not be paused or stopped manually.
          example: true
        hidden:
          type: bool
          description: >-
            Whether this pipeline is hidden. Hidden pipelines are only available
            through the `show pipelines` operator.
        created_at:
          type: integer
          format: int64
          description: The Unix timestamp of the pipeline creation time in nanoseconds.
        last_modified:
          type: integer
          format: int64
          description: The Unix timestamp of the last pipeline modification in nanoseconds.
        start_time:
          type: string
          description: >-
            If the pipeline has been started, the ISO 8601 timestamp of the most
            recent start.
        total_runs:
          type: integer
          description: The total amount of runs this pipeline has attempted so far.
        state:
          type: string
          enum:
            - created
            - running
            - paused
            - failed
            - stopped
            - completed
        error:
          type: string
          description: The error that the pipeline may have encountered during running.
        diagnostics:
          $ref: '#/components/schemas/Diagnostics'
        labels:
          $ref: '#/components/schemas/PipelineLabels'
        retry_delay:
          type: string
          description: >
            A duration string specifying the minimum time between automatic
            restarts

            of a pipeline when an error occurs. Takes no effect if restarting on

            failure is disabled.
          example: 10s
        autostart:
          $ref: '#/components/schemas/PipelineAutostart'
        autodelete:
          $ref: '#/components/schemas/PipelineAutodelete'
        ttl:
          type: string
          description: If a TTL exists for this pipeline, the TTL as a duration string.
          example: 2min
        remaining_ttl:
          type: string
          description: >-
            If a TTL exists for this pipeline, the remaining TTL as a duration
            string.
          example: 10s
    PipelineLabel:
      type: object
      properties:
        text:
          type: string
          description: The pipeline label text.
          example: zeek
        color:
          type: string
          description: The pipeline label color.
          example: 3F1A24
    PipelineLabels:
      type: array
      description: The user-provided labels for this pipeline.
      items:
        $ref: '#/components/schemas/PipelineLabel'
  securitySchemes:
    TenzirToken:
      type: apiKey
      in: header
      name: X-Tenzir-Token
paths:
  /ping:
    post:
      summary: Returns a success response
      description: >-
        Returns a success response to indicate that the node is able to respond
        to requests. The response body includes the current node version.
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: The version of the responding node.
                    example: v2.3.0-rc3-32-g8529a6c43f
              example:
                version: v2.3.0-rc3-32-g8529a6c43f
        '401':
          description: Not authenticated.
  /pipeline/create:
    post:
      summary: Create a new pipeline
      description: >-
        Creates a new pipeline. If `autostart.created` is `true`, the response
        is only sent after the pipeline was successfully started. If this fails,
        then the pipeline is immediately discarded, and the response contains
        the observed diagnostics. The error field then contains a rendered
        representation of the diagnostics. Otherwise, the diagnostics field is
        not present.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParameters'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The id of the successfully created pipeline.
        '400':
          description: Invalid arguments or invalid pipeline.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
                  diagnostics:
                    $ref: '#/components/schemas/Diagnostics'
  /pipeline/delete:
    post:
      summary: Delete an existing pipeline
      description: Deletes an existing pipeline.
      requestBody:
        description: Body for the delete endpoint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  example: 4c7f2b11-6169-4d1b-89b4-4fc0a68b3d4a
                  description: The id of the pipeline to be deleted.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Invalid arguments.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
  /pipeline/launch:
    post:
      summary: Launch a new pipeline
      description: >-
        Depending on whether the pipeline ends with a sink, create the pipeline
        with a [`serve` sink](https://docs.tenzir.com/operators/serve) with the
        provided `/pipeline/create` parameters or notify that this pipeline is
        deployable for further action.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchParameters'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: >-
                      #/components/schemas/Launch Response For Pipeline With
                      Explicit Sink
                  - $ref: >-
                      #/components/schemas/Launch Response For Pipeline Without
                      Explicit Sink
  /pipeline/list:
    post:
      summary: List all existing pipelines
      description: Lists all existing pipelines.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                description: An array of all pipelines.
                properties:
                  pipelines:
                    type: array
                    items:
                      $ref: '#/components/schemas/PipelineInfo'
                example:
                  pipelines:
                    - id: 4c7f2b11-6169-4d1b-89b4-4fc0a68b3d4a
                      name: user-assigned-name
                      definition: export | where foo | publish /bar
                      hidden: false
                      created_at: 1706180157837037600
                      last_modifed: 1706180157837038000
                      state: running
                      error: null
                      diagnostics: []
                    - id: 08446737-da9b-4787-8599-97d85c48c3bb
                      name: wrong-pipeline
                      definition: export asdf
                      hidden: false
                      created_at: 1706180157837037600
                      last_modifed: 1706180157837038000
                      state: failed
                      error: format 'asdf' not found
                      diagnostics: []
        '400':
          description: Invalid arguments.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
  /pipeline/reset-ttl:
    post:
      summary: Reset the TTL of an existing pipeline
      description: >
        Resets the TTL of an existing pipeline as specified, if one has been
        specified in the /create endpoint before.

        Resetting the TTL means that the TTL-related timeout will start counting
        from zero seconds again, thus keeping the pipeline alive for longer.
      requestBody:
        description: Body for the reset-ttl endpoint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
              properties:
                ids:
                  type: array
                  items:
                    type: string
                  example:
                    - 7
                    - 1
                    - 3
                  description: The id of pipelines whose TTL should be updated.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ids:
                    type: array
                    items:
                      type: string
                    example:
                      - 7
                      - 1
                    description: >-
                      The id of pipelines whose TTL has been successfully
                      updated.
        '400':
          description: Invalid arguments.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
  /pipeline/update:
    post:
      summary: Update pipeline state
      description: >
        Update the state of the pipeline.

        All values that are not explicitly included in the request are left in
        their old state.
      requestBody:
        description: Body for the update endpoint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  example: 08446737-da9b-4787-8599-97d85c48c3bb
                  description: The id of the pipeline to be updated.
                definition:
                  type: string
                  example: export | where baz | publish /foo
                  description: The updated definition of the pipeline.
                action:
                  type: string
                  enum:
                    - start
                    - pause
                    - stop
                  description: The action that will change the pipeline's running state.
                  example: start
                name:
                  type: string
                  description: >-
                    Update the human-readable name of the pipeline to this
                    value.
                  example: zeek-monitoring-pipeline
                labels:
                  $ref: '#/components/schemas/PipelineLabels'
                autostart:
                  $ref: '#/components/schemas/PipelineAutostart'
                autodelete:
                  $ref: '#/components/schemas/PipelineAutodelete'
                retry_delay:
                  type: string
                  description: >
                    A duration string specifying the minimum time between
                    automatic restarts

                    of a pipeline when an error occurs. Takes no effect if
                    restarting on

                    failure is disabled.
                  example: 500ms
                unstoppable:
                  type: boolean
                  description: >
                    A flag specifying whether this pipeline is unstoppable.

                    Unstoppable pipelines start automatically, fail when they
                    complete, and can not be paused or stopped manually.
                  example: true
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                description: The updated pipeline.
                properties:
                  pipeline:
                    $ref: '#/components/schemas/PipelineInfo'
        '400':
          description: Invalid arguments.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
  /serve:
    post:
      summary: Return data from a pipeline
      description: >-
        Returns events from an existing pipeline. The pipeline definition must
        include a serve operator. By default, the endpoint performs long polling
        (`timeout: 5s`) and returns events as soon as they are available
        (`min_events: 1`).
      requestBody:
        description: Body for the serve endpoint
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serve_id
              properties:
                serve_id:
                  type: string
                  example: query1
                  description: The id that was passed to the serve operator.
                continuation_token:
                  type: string
                  example: 340ce2j
                  description: >-
                    The continuation token that was returned with the last
                    response. For the initial request this is null.
                max_events:
                  type: integer
                  example: 1024
                  default: 1024
                  description: The maximum number of events returned.
                min_events:
                  type: integer
                  example: 1
                  default: 1
                  description: Wait for this number of events before returning.
                timeout:
                  type: string
                  example: 200ms
                  default: 5s
                  description: >-
                    The maximum amount of time spent on the request. Hitting the
                    timeout is not an error. The timeout must not be greater
                    than 10 seconds.
                schema:
                  type: string
                  example: exact
                  default: legacy
                  description: >-
                    The output format in which schemas are represented. Must be
                    one of "legacy", "exact", or "never". Use "exact" to switch
                    to a type representation matching Tenzir's type system
                    exactly, and "never" to omit schema schema definitions from
                    the output entirely.
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_continuation_token:
                    type: string
                    description: >-
                      A token to access the next pipeline data batch, null if
                      the pipeline is completed.
                    example: 340ce2j
                  state:
                    type: string
                    description: >-
                      The state of the corresponding pipeline at the time of the
                      request. One of `running`, `completed`, or `failed`.
                    example: running
                  schemas:
                    type: array
                    items:
                      type: object
                      properties:
                        schema_id:
                          type: string
                          description: The unique schema identifier.
                        definition:
                          type: object
                          description: The schema definition in JSON format.
                    description: The schemas that the served events are based on.
                    example:
                      - schema_id: c631d301e4b18f4
                        definition:
                          - name: tenzir.summarize
                            kind: record
                            type: tenzir.summarize
                            attributes: {}
                            path: []
                            fields:
                              - name: severity
                                kind: string
                                type: string
                                attributes: {}
                                path:
                                  - 0
                                fields: []
                              - name: pipeline_id
                                kind: string
                                type: string
                                attributes: {}
                                path:
                                  - 1
                                fields: []
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        schema_id:
                          type: string
                          description: The unique schema identifier.
                        data:
                          type: object
                          description: The actual served data in JSON format.
                    description: The served events.
                    example:
                      - schema_id: c631d301e4b18f4
                        data:
                          timestamp: '2023-04-26T12:00:00Z'
                          schema: zeek.conn
                          schema_id: ab2371bas235f1
                          events: 50
                      - schema_id: c631d301e4b18f4
                        data:
                          timestamp: '2023-04-26T12:05:00Z'
                          schema: suricata.dns
                          schema_id: cd4771bas235f1
                          events: 50
        '400':
          description: Invalid arguments.
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
                    example: Invalid arguments
                    description: The error message.
