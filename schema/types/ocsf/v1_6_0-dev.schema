// This file is generated, do not edit manually.
// OCSF version: 1.6.0-dev

// The Analytic object contains details about the analytic technique used to
// analyze and derive insights from the data or information that led to the
// creation of a finding or conclusion.
type _ocsf.v1_6_0_dev.object.analytic = record{
  algorithm: string #optional,
  category: string #optional,
  desc: string #optional,
  name: string #recommended,
  type: string #optional,
  type_id: int64 #required,
  uid: string #recommended,
  version: string #optional,
}

// The Finding object describes metadata related to a security finding generated
// by a security tool or system.
type _ocsf.v1_6_0_dev.object.finding = record{
  created_time: time #optional,
  desc: string #optional,
  first_seen_time: time #optional,
  last_seen_time: time #optional,
  modified_time: time #optional,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  product_uid: string #optional,
  related_events: list<_ocsf.v1_6_0_dev.object.related_event> #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  src_url: string #optional,
  supporting_data: string #print_json #optional,
  title: string #required,
  types: list<string> #optional,
  uid: string #required,
}

// A collection of evidence artifacts associated to the activity/activities that
// triggered a security detection.
type _ocsf.v1_6_0_dev.object.evidences = record{
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  api: _ocsf.v1_6_0_dev.object.api #recommended,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  container: _ocsf.v1_6_0_dev.object.container #recommended,
  data: string #print_json #optional,
  database: _ocsf.v1_6_0_dev.object.database #recommended,
  databucket: _ocsf.v1_6_0_dev.object.databucket #recommended,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  email: _ocsf.v1_6_0_dev.object.email #recommended,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  http_request: _ocsf.v1_6_0_dev.object.http_request #recommended,
  http_response: _ocsf.v1_6_0_dev.object.http_response #recommended,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #recommended,
  job: _ocsf.v1_6_0_dev.object.job #recommended,
  name: string #optional,
  process: _ocsf.v1_6_0_dev.object.process #recommended,
  query: _ocsf.v1_6_0_dev.object.dns_query #recommended,
  reg_key: _ocsf.v1_6_0_dev.object.reg_key #recommended,
  reg_value: _ocsf.v1_6_0_dev.object.reg_value #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  script: _ocsf.v1_6_0_dev.object.script #recommended,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #recommended,
  uid: string #optional,
  url: _ocsf.v1_6_0_dev.object.url #recommended,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
  verdict: string #optional,
  verdict_id: int64 #optional,
  win_service: _ocsf.v1_6_0_dev.object.win_service #recommended,
}

// The peripheral device object describes the identity, vendor and model of a
// peripheral device.
type _ocsf.v1_6_0_dev.object.peripheral_device = record{
  class: string #required,
  model: string #recommended,
  name: string #required,
  serial_number: string #recommended,
  uid: string #recommended,
  vendor_name: string #recommended,
}

// The registry key object describes a Windows registry key.
type _ocsf.v1_6_0_dev.object.reg_key = record{
  is_system: bool #optional,
  modified_time: time #optional,
  path: string #required,
  security_descriptor: string #optional,
}

// The Service object describes characteristics of a service, <code> e.g. AWS
// EC2. </code>
type _ocsf.v1_6_0_dev.object.service = record{
  labels: list<string> #optional,
  name: string #recommended,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  uid: string #recommended,
  version: string #recommended,
}

// An environment variable.
type _ocsf.v1_6_0_dev.object.environment_variable = record{
  name: string #required,
  value: string #required,
}

// The Fingerprint object provides detailed information about a digital
// fingerprint, which is a compact representation of data used to identify a
// longer piece of information, such as a public key or file content. It
// contains the algorithm and value of the fingerprint, enabling efficient and
// reliable identification of the associated data.
type _ocsf.v1_6_0_dev.object.fingerprint = record{
  algorithm: string #optional,
  algorithm_id: int64 #required,
  value: string #required,
}

// The Affected Code object describes details about a code block identified as
// vulnerable.
type _ocsf.v1_6_0_dev.object.affected_code = record{
  end_column: int64 #recommended,
  end_line: int64 #recommended,
  file: _ocsf.v1_6_0_dev.object.file #required,
  owner: _ocsf.v1_6_0_dev.object.user #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  rule: _ocsf.v1_6_0_dev.object.rule #recommended,
  start_column: int64 #recommended,
  start_line: int64 #recommended,
}

// Describes an anomaly or deviation detected in a system. Anomalies are
// unexpected activity patterns that could indicate potential issues needing
// attention.
type _ocsf.v1_6_0_dev.object.anomaly = record{
  observation_parameter: string #required,
  observation_type: string #recommended,
  observations: list<_ocsf.v1_6_0_dev.object.observation> #required,
  observed_pattern: string #recommended,
}

// Represents a single unit of work or operation within a distributed trace. A
// span typically tracks the execution of a request across a service, capturing
// important details such as the operation, timestamps, and status. Spans help
// break down the overall trace into smaller, manageable parts, enabling
// detailed analysis of the performance and behavior of specific operations
// within the system. They are crucial for understanding latency, dependencies,
// and bottlenecks in complex distributed systems.
type _ocsf.v1_6_0_dev.object.span = record{
  duration: int64 #optional,
  end_time: time #required,
  message: string #optional,
  operation: string #optional,
  parent_uid: string #optional,
  service: _ocsf.v1_6_0_dev.object.service #optional,
  start_time: time #required,
  status_code: string #optional,
  uid: string #required,
}

// The trace object contains information about a distributed trace,  which is
// crucial for observability. Traces are made up of one or more spans, which are
// individual units of work in application activity. Traces track the journey of
// a request as it moves through various services in a system, capturing key
// details like timing, status, and dependencies at each step. Traces provide
// insights into system performance, helping to identify latency, bottlenecks,
// and issues in complex, distributed environments.
type _ocsf.v1_6_0_dev.object.trace = record{
  duration: int64 #optional,
  end_time: time #optional,
  flags: list<string> #optional,
  service: _ocsf.v1_6_0_dev.object.service #optional,
  span: _ocsf.v1_6_0_dev.object.span #optional,
  start_time: time #optional,
  uid: string #required,
}

// The TLS Extension object describes additional attributes that extend the base
// Transport Layer Security (TLS) object.
type _ocsf.v1_6_0_dev.object.tls_extension = record{
  data: string #print_json #recommended,
  type: string #optional,
  type_id: int64 #required,
}

// The DCE/RPC, or Distributed Computing Environment/Remote Procedure Call,
// object describes the remote procedure call system for distributed computing
// environments.
type _ocsf.v1_6_0_dev.object.dce_rpc = record{
  command: string #recommended,
  command_response: string #recommended,
  flags: list<string> #required,
  opnum: int64 #recommended,
  rpc_interface: _ocsf.v1_6_0_dev.object.rpc_interface #required,
}

// The Product object describes characteristics of a software product.
type _ocsf.v1_6_0_dev.object.product = record{
  cpe_name: string #optional,
  feature: _ocsf.v1_6_0_dev.object.feature #optional,
  lang: string #optional,
  name: string #recommended,
  path: string #optional,
  uid: string #recommended,
  url_string: string #optional,
  vendor_name: string #recommended,
  version: string #recommended,
}

// The CWE object represents a weakness in a software system that can be
// exploited by a threat actor to perform an attack. The CWE object is based on
// the <a target='_blank' href='https://cwe.mitre.org/'>Common Weakness
// Enumeration (CWE)</a> catalog.
type _ocsf.v1_6_0_dev.object.cwe = record{
  caption: string #optional,
  src_url: string #optional,
  uid: string #required,
}

// Details about where in the target entity, specified information was
// discovered. Only the attributes, relevant to the target entity type should be
// populated.
type _ocsf.v1_6_0_dev.object.occurrence_details = record{
  cell_name: string #optional,
  column_name: string #optional,
  column_number: int64 #optional,
  end_line: int64 #optional,
  json_path: string #optional,
  page_number: int64 #optional,
  record_index_in_array: int64 #optional,
  row_number: int64 #optional,
  start_line: int64 #optional,
}

// The MITRE Technique object describes the ATT&CK® or ATLAS™ Technique ID
// and/or name associated to an attack.
type _ocsf.v1_6_0_dev.object.technique = record{
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The Firewall Rule object represents a specific rule within a firewall policy
// or event. It contains information about a rule's configuration, properties,
// and associated actions that define how network traffic is handled by the
// firewall.
type _ocsf.v1_6_0_dev.object.firewall_rule = record{
  category: string #optional,
  condition: string #optional,
  desc: string #optional,
  duration: int64 #optional,
  match_details: list<string> #optional,
  match_location: string #optional,
  name: string #recommended,
  rate_limit: int64 #optional,
  sensitivity: string #optional,
  type: string #optional,
  uid: string #recommended,
  version: string #optional,
}

// Describes the analysis of activity patterns and anomalies of target entities
// to identify potential security threats, performance issues, or other
// deviations from established baselines. This includes monitoring and analyzing
// user interactions, API usage, resource utilization, access patterns and other
// measured indicators.
type _ocsf.v1_6_0_dev.object.anomaly_analysis = record{
  analysis_targets: list<_ocsf.v1_6_0_dev.object.analysis_target> #required,
  anomalies: list<_ocsf.v1_6_0_dev.object.anomaly> #required,
  baselines: list<_ocsf.v1_6_0_dev.object.baseline> #recommended,
}

// The API, or Application Programming Interface, object represents  information
// pertaining to an API request and response.
type _ocsf.v1_6_0_dev.object.api = record{
  group: _ocsf.v1_6_0_dev.object.group #optional,
  operation: string #required,
  request: _ocsf.v1_6_0_dev.object.request #recommended,
  response: _ocsf.v1_6_0_dev.object.response #recommended,
  service: _ocsf.v1_6_0_dev.object.service #optional,
  version: string #optional,
}

// The HASSH object contains SSH network fingerprinting values for specific
// client/server implementations. It provides a standardized way of identifying
// and categorizing SSH connections based on their unique characteristics and
// behavior.
type _ocsf.v1_6_0_dev.object.hassh = record{
  algorithm: string #recommended,
  fingerprint: _ocsf.v1_6_0_dev.object.fingerprint #required,
}

// An unordered collection of attributes. It defines a set of attributes
// available in all objects. It can be also used as a generic object to log
// objects that are not otherwise defined by the schema.
type _ocsf.v1_6_0_dev.object.object = record{
}

// The MITRE Mitigation object describes the ATT&CK® or ATLAS™ Mitigation ID
// and/or name that is associated to an attack.
type _ocsf.v1_6_0_dev.object.mitigation = record{
  countermeasures: list<_ocsf.v1_6_0_dev.object.d3fend> #optional,
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The MITRE ATT&CK® & ATLAS™ object describes the tactic, technique, sub-
// technique & mitigation associated to an attack.
type _ocsf.v1_6_0_dev.object.attack = record{
  mitigation: _ocsf.v1_6_0_dev.object.mitigation #optional,
  sub_technique: _ocsf.v1_6_0_dev.object.sub_technique #recommended,
  tactic: _ocsf.v1_6_0_dev.object.tactic #recommended,
  tactics: list<_ocsf.v1_6_0_dev.object.tactic> #optional,
  technique: _ocsf.v1_6_0_dev.object.technique #recommended,
  version: string #recommended,
}

// The Job object provides information about a scheduled job or task, including
// its name, command line, and state. It encompasses attributes that describe
// the properties and status of the scheduled job.
type _ocsf.v1_6_0_dev.object.job = record{
  cmd_line: string #recommended,
  created_time: time #recommended,
  desc: string #recommended,
  file: _ocsf.v1_6_0_dev.object.file #required,
  last_run_time: time #recommended,
  name: string #required,
  next_run_time: time #optional,
  run_state: string #optional,
  run_state_id: int64 #recommended,
  user: _ocsf.v1_6_0_dev.object.user #optional,
}

// Details about the encryption methodology utilized.
type _ocsf.v1_6_0_dev.object.encryption_details = record{
  algorithm: string #optional,
  algorithm_id: int64 #recommended,
  key_length: int64 #optional,
  key_uid: string #optional,
  type: string #recommended,
}

// The HTTP Response object contains detailed information about the response
// sent from a web server to the requester. It encompasses attributes and
// metadata that describe the response status, headers, body content, and other
// relevant information.
type _ocsf.v1_6_0_dev.object.http_response = record{
  body_length: int64 #optional,
  code: int64 #required,
  content_type: string #optional,
  http_headers: list<_ocsf.v1_6_0_dev.object.http_header> #recommended,
  latency: int64 #optional,
  length: int64 #optional,
  message: string #optional,
  status: string #optional,
}

// The CIS Control (aka Critical Security Control) object describes a
// prioritized set of actions to protect your organization and data from cyber-
// attack vectors. The <a target='_blank'
// href='https://www.cisecurity.org/controls'>CIS Controls</a> are defined by
// the Center for Internet Security.
type _ocsf.v1_6_0_dev.object.cis_control = record{
  desc: string #optional,
  name: string #required,
  version: string #recommended,
}

// The Device object represents an addressable computer system or host, which is
// typically connected to a computer network and participates in the
// transmission or processing of data within the computer network.
type _ocsf.v1_6_0_dev.object.device = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  autoscale_uid: string #optional,
  boot_time: time #optional,
  boot_uid: string #optional,
  created_time: time #optional,
  desc: string #optional,
  domain: string #optional,
  eid: string #optional,
  first_seen_time: time #optional,
  groups: list<_ocsf.v1_6_0_dev.object.group> #optional,
  hostname: string #recommended,
  hw_info: _ocsf.v1_6_0_dev.object.device_hw_info #optional,
  hypervisor: string #optional,
  iccid: string #optional,
  image: _ocsf.v1_6_0_dev.object.image #optional,
  imei: string #optional,
  imei_list: list<string> #optional,
  instance_uid: string #recommended,
  interface_name: string #recommended,
  interface_uid: string #recommended,
  ip: ip #optional,
  is_backed_up: bool #optional,
  is_compliant: bool #optional,
  is_managed: bool #optional,
  is_mobile_account_active: bool #optional,
  is_personal: bool #optional,
  is_shared: bool #optional,
  is_supervised: bool #optional,
  is_trusted: bool #optional,
  last_seen_time: time #optional,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  mac: string #optional,
  meid: string #optional,
  model: string #optional,
  modified_time: time #optional,
  name: string #optional,
  network_interfaces: list<_ocsf.v1_6_0_dev.object.network_interface> #optional,
  org: _ocsf.v1_6_0_dev.object.organization #optional,
  os: _ocsf.v1_6_0_dev.object.os #optional,
  os_machine_uuid: string #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  region: string #recommended,
  risk_level: string #optional,
  risk_level_id: int64 #optional,
  risk_score: int64 #optional,
  subnet: subnet #optional,
  subnet_uid: string #optional,
  type: string #recommended,
  type_id: int64 #required,
  udid: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  vendor_name: string #recommended,
  vlan_uid: string #optional,
  vpc_uid: string #optional,
  zone: string #optional,
}

// The registry value object describes a Windows registry value.
type _ocsf.v1_6_0_dev.object.reg_value = record{
  data: string #print_json #optional,
  is_default: bool #optional,
  is_system: bool #optional,
  modified_time: time #optional,
  name: string #required,
  path: string #required,
  type: string #optional,
  type_id: int64 #recommended,
}

// The Process object describes a running instance of a launched program.
type _ocsf.v1_6_0_dev.object.process = record{
  ancestry: list<_ocsf.v1_6_0_dev.object.process_entity> #optional,
  cmd_line: string #recommended,
  cpid: string #recommended,
  created_time: time #recommended,
  environment_variables: list<_ocsf.v1_6_0_dev.object.environment_variable> #optional,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  integrity: string #optional,
  integrity_id: int64 #optional,
  lineage: list<string> #optional,
  loaded_modules: list<string> #optional,
  name: string #recommended,
  path: string #optional,
  pid: int64 #recommended,
  sandbox: string #optional,
  session: _ocsf.v1_6_0_dev.object.session #optional,
  terminated_time: time #optional,
  tid: int64 #optional,
  uid: string #recommended,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
  working_directory: string #optional,
  xattributes: string #print_json #optional,
}

// The Actor object contains details about the user, role, application, service,
// or process that initiated or performed a specific activity. Note that Actor
// is not the threat actor of a campaign but may be part of a campaign.
type _ocsf.v1_6_0_dev.object.actor = record{
  app_name: string #optional,
  app_uid: string #optional,
  authorizations: list<_ocsf.v1_6_0_dev.object.authorization> #optional,
  idp: _ocsf.v1_6_0_dev.object.idp #optional,
  invoked_by: string #optional,
  process: _ocsf.v1_6_0_dev.object.process #recommended,
  session: _ocsf.v1_6_0_dev.object.session #optional,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
}

// The Uniform Resource Locator (URL) object describes the characteristics of a
// URL.
type _ocsf.v1_6_0_dev.object.url = record{
  categories: list<string> #optional,
  category_ids: list<int64> #recommended,
  domain: string #optional,
  hostname: string #recommended,
  path: string #recommended,
  port: int64 #recommended,
  query_string: string #recommended,
  resource_type: string #optional,
  scheme: string #recommended,
  subdomain: string #optional,
  url_string: string #recommended,
}

// An autonomous system (AS) is a collection of connected Internet Protocol (IP)
// routing prefixes under the control of one or more network operators on behalf
// of a single administrative entity or domain that presents a common, clearly
// defined routing policy to the internet.
type _ocsf.v1_6_0_dev.object.autonomous_system = record{
  name: string #recommended,
  number: int64 #recommended,
}

// The Feature object provides information about the software product feature
// that generated a specific event. It encompasses details related to the
// capabilities, components, user interface (UI) design, and performance
// upgrades associated with the feature.
type _ocsf.v1_6_0_dev.object.feature = record{
  name: string #recommended,
  uid: string #recommended,
  version: string #recommended,
}

// The Assessment object describes a point-in-time assessment, check, or
// evaluation of a specific configuration or signal against an asset, entity,
// person, or otherwise. For example, this can encapsulate
// <code>os_signals</code> from CrowdStrike Falcon Zero Trust Assessments, or
// account for <code>Datastore</code> configurations from Cyera, or capture
// details of Microsoft Intune configuration policies.
type _ocsf.v1_6_0_dev.object.assessment = record{
  category: string #optional,
  desc: string #recommended,
  meets_criteria: bool #required,
  name: string #recommended,
  policy: _ocsf.v1_6_0_dev.object.policy #optional,
  uid: string #optional,
}

// The DNS Answer object represents a specific response provided by the Domain
// Name System (DNS) when querying for information about a domain or performing
// a DNS operation. It encapsulates the relevant details and data returned by
// the DNS server in response to a query.
type _ocsf.v1_6_0_dev.object.dns_answer = record{
  class: string #recommended,
  flag_ids: list<int64> #recommended,
  flags: list<string> #optional,
  packet_uid: int64 #recommended,
  rdata: string #required,
  ttl: int64 #recommended,
  type: string #recommended,
}

// The Network Connection Information object describes characteristics of an OSI
// Transport Layer communication, including TCP and UDP.
type _ocsf.v1_6_0_dev.object.network_connection_info = record{
  boundary: string #optional,
  boundary_id: int64 #recommended,
  community_uid: string #optional,
  direction: string #optional,
  direction_id: int64 #required,
  flag_history: string #optional,
  protocol_name: string #recommended,
  protocol_num: int64 #recommended,
  protocol_ver: string #optional,
  protocol_ver_id: int64 #recommended,
  session: _ocsf.v1_6_0_dev.object.session #optional,
  tcp_flags: int64 #optional,
  uid: string #recommended,
}

// The Reputation object describes the reputation/risk score of an entity (e.g.
// device, user, domain).
type _ocsf.v1_6_0_dev.object.reputation = record{
  base_score: double #required,
  provider: string #recommended,
  score: string #optional,
  score_id: int64 #required,
}

// Represents a node or a vertex in a graph structure.
type _ocsf.v1_6_0_dev.object.node = record{
  data: string #print_json #optional,
  desc: string #optional,
  name: string #recommended,
  type: string #optional,
  uid: string #required,
}

// The Exploit Prediction Scoring System (EPSS) object describes the estimated
// probability a vulnerability will be exploited. EPSS is a community-driven
// effort to combine descriptive information about vulnerabilities (CVEs) with
// evidence of actual exploitation in-the-wild. (<a target='_blank'
// href='https://www.first.org/epss/'>EPSS</a>).
type _ocsf.v1_6_0_dev.object.epss = record{
  created_time: time #recommended,
  percentile: double #optional,
  score: string #required,
  version: string #recommended,
}

// The Identity Provider object contains detailed information about a provider
// responsible for creating, maintaining, and managing identity information
// while offering authentication services to applications. An Identity Provider
// (IdP) serves as a trusted authority that verifies the identity of users and
// issues authentication tokens or assertions to enable secure access to
// applications or services.
type _ocsf.v1_6_0_dev.object.idp = record{
  auth_factors: list<_ocsf.v1_6_0_dev.object.auth_factor> #optional,
  domain: string #optional,
  fingerprint: _ocsf.v1_6_0_dev.object.fingerprint #optional,
  has_mfa: bool #optional,
  issuer: string #optional,
  name: string #recommended,
  protocol_name: string #optional,
  scim: _ocsf.v1_6_0_dev.object.scim #optional,
  sso: _ocsf.v1_6_0_dev.object.sso #optional,
  state: string #optional,
  state_id: int64 #optional,
  tenant_uid: string #optional,
  uid: string #recommended,
  url_string: string #optional,
}

// The query info object holds information related to data access within a
// datastore. To access, manipulate, delete, or retrieve data from a datastore,
// a query must be written using a specific syntax.
type _ocsf.v1_6_0_dev.object.query_info = record{
  bytes: int64 #optional,
  data: string #print_json #optional,
  name: string #recommended,
  query_string: string #required,
  query_time: time #optional,
  uid: string #recommended,
}

// The Process Entity object provides critical fields for referencing a process.
type _ocsf.v1_6_0_dev.object.process_entity = record{
  cmd_line: string #recommended,
  cpid: string #recommended,
  created_time: time #recommended,
  name: string #recommended,
  path: string #optional,
  pid: int64 #recommended,
  uid: string #recommended,
}

// The Script object describes a script or command that can be executed by a
// shell, script engine, or interpreter. Examples include Bash, JavsScript,
// PowerShell, Python, VBScript, etc. Note that the term <em>script</em> here
// denotes not only a script contained within a file but also a script or
// command typed interactively by a user, supplied on the command line, or
// provided by some other file-less mechanism.
type _ocsf.v1_6_0_dev.object.script = record{
  file: _ocsf.v1_6_0_dev.object.file #optional,
  hashes: list<_ocsf.v1_6_0_dev.object.fingerprint> #recommended,
  name: string #optional,
  parent_uid: string #optional,
  script_content: _ocsf.v1_6_0_dev.object.long_string #required,
  type: string #optional,
  type_id: int64 #required,
  uid: string #optional,
}

// The File object represents the metadata associated with a file stored in a
// computer system. It encompasses information about the file itself, including
// its attributes, properties, and organizational details.
type _ocsf.v1_6_0_dev.object.file = record{
  accessed_time: time #optional,
  accessor: _ocsf.v1_6_0_dev.object.user #optional,
  attributes: int64 #optional,
  company_name: string #optional,
  confidentiality: string #optional,
  confidentiality_id: int64 #optional,
  created_time: time #optional,
  creator: _ocsf.v1_6_0_dev.object.user #optional,
  desc: string #optional,
  drive_type: string #optional,
  drive_type_id: int64 #optional,
  encryption_details: _ocsf.v1_6_0_dev.object.encryption_details #optional,
  ext: string #recommended,
  hashes: list<_ocsf.v1_6_0_dev.object.fingerprint> #recommended,
  internal_name: string #optional,
  is_deleted: bool #optional,
  is_encrypted: bool #optional,
  is_system: bool #optional,
  mime_type: string #optional,
  modified_time: time #optional,
  modifier: _ocsf.v1_6_0_dev.object.user #optional,
  name: string #required,
  owner: _ocsf.v1_6_0_dev.object.user #optional,
  parent_folder: string #optional,
  path: string #recommended,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  security_descriptor: string #optional,
  signature: _ocsf.v1_6_0_dev.object.digital_signature #optional,
  size: int64 #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  type_id: int64 #required,
  uid: string #optional,
  uri: string #optional,
  url: _ocsf.v1_6_0_dev.object.url #optional,
  version: string #optional,
  volume: string #optional,
  xattributes: string #print_json #optional,
}

// The Data Classification object includes information about data classification
// levels and data category types.
type _ocsf.v1_6_0_dev.object.data_classification = record{
  category: string #optional,
  category_id: int64 #recommended,
  classifier_details: _ocsf.v1_6_0_dev.object.classifier_details #recommended,
  confidentiality: string #optional,
  confidentiality_id: int64 #recommended,
  discovery_details: list<_ocsf.v1_6_0_dev.object.discovery_details> #optional,
  policy: _ocsf.v1_6_0_dev.object.policy #optional,
  size: int64 #optional,
  src_url: string #optional,
  status: string #recommended,
  status_details: list<string> #optional,
  status_id: int64 #recommended,
  total: int64 #optional,
  uid: string #optional,
}

// The Malware object describes the classification of known malicious software,
// which is intentionally designed to cause damage to a computer, server,
// client, or computer network.
type _ocsf.v1_6_0_dev.object.malware = record{
  classification_ids: list<int64> #required,
  classifications: list<string> #optional,
  cves: list<_ocsf.v1_6_0_dev.object.cve> #optional,
  files: list<_ocsf.v1_6_0_dev.object.file> #optional,
  name: string #recommended,
  num_infected: int64 #optional,
  path: string #recommended,
  provider: string #recommended,
  severity: string #optional,
  severity_id: int64 #recommended,
  uid: string #recommended,
}

// The malware scan information object describes characteristics, metadata of a
// malware scanning job.
type _ocsf.v1_6_0_dev.object.malware_scan_info = record{
  end_time: time #optional,
  name: string #recommended,
  num_files: int64 #optional,
  num_infected: int64 #optional,
  num_volumes: int64 #optional,
  size: int64 #optional,
  start_time: time #optional,
  type: string #optional,
  type_id: int64 #required,
  uid: string #recommended,
  unique_malware_count: int64 #optional,
}

// The Endpoint object describes a physical or virtual device that connects to
// and exchanges information with a computer network. Some examples of endpoints
// are mobile devices, desktop computers, virtual machines, embedded devices,
// and servers. Internet-of-Things devices—like cameras, lighting,
// refrigerators, security systems, smart speakers, and thermostats—are also
// endpoints.
type _ocsf.v1_6_0_dev.object.endpoint = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  domain: string #optional,
  hostname: string #recommended,
  hw_info: _ocsf.v1_6_0_dev.object.device_hw_info #optional,
  instance_uid: string #recommended,
  interface_name: string #recommended,
  interface_uid: string #recommended,
  ip: ip #recommended,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  mac: string #optional,
  name: string #recommended,
  os: _ocsf.v1_6_0_dev.object.os #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  subnet_uid: string #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  vlan_uid: string #optional,
  vpc_uid: string #optional,
  zone: string #optional,
}

// The Software Bill of Materials object describes characteristics of a
// generated SBOM.
type _ocsf.v1_6_0_dev.object.sbom = record{
  created_time: time #recommended,
  package: _ocsf.v1_6_0_dev.object.package #required,
  product: _ocsf.v1_6_0_dev.object.product #recommended,
  software_components: list<_ocsf.v1_6_0_dev.object.software_component> #required,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #optional,
  version: string #optional,
}

// The Module object describes the load attributes of a module.
type _ocsf.v1_6_0_dev.object.module = record{
  base_address: string #recommended,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  function_name: string #optional,
  load_type: string #optional,
  load_type_id: int64 #required,
  start_address: string #recommended,
  type: string #recommended,
}

// The Web Resource object describes characteristics of a web resource that was
// affected by the activity/event.
type _ocsf.v1_6_0_dev.object.web_resource = record{
  created_time: time #optional,
  data: string #print_json #optional,
  desc: string #optional,
  labels: list<string> #optional,
  modified_time: time #optional,
  name: string #recommended,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  url_string: string #recommended,
}

// The HTTP Request object represents the attributes of a request made to a web
// server. It encapsulates the details and metadata associated with an HTTP
// request, including the request method, headers, URL, query parameters, body
// content, and other relevant information.
type _ocsf.v1_6_0_dev.object.http_request = record{
  args: string #optional,
  body_length: int64 #optional,
  http_headers: list<_ocsf.v1_6_0_dev.object.http_header> #recommended,
  http_method: string #recommended,
  length: int64 #optional,
  referrer: string #optional,
  uid: string #optional,
  url: _ocsf.v1_6_0_dev.object.url #recommended,
  user_agent: string #recommended,
  version: string #recommended,
  x_forwarded_for: list<ip> #optional,
}

// The Finding Information object describes metadata related to a security
// finding generated by a security tool or system.
type _ocsf.v1_6_0_dev.object.finding_info = record{
  analytic: _ocsf.v1_6_0_dev.object.analytic #recommended,
  attacks: list<_ocsf.v1_6_0_dev.object.attack> #optional,
  created_time: time #optional,
  data_sources: list<string> #optional,
  desc: string #optional,
  first_seen_time: time #optional,
  kill_chain: list<_ocsf.v1_6_0_dev.object.kill_chain_phase> #optional,
  last_seen_time: time #optional,
  modified_time: time #optional,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  product_uid: string #optional,
  related_analytics: list<_ocsf.v1_6_0_dev.object.analytic> #optional,
  related_events: list<_ocsf.v1_6_0_dev.object.related_event> #optional,
  related_events_count: int64 #optional,
  src_url: string #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  title: string #recommended,
  traits: list<_ocsf.v1_6_0_dev.object.trait> #optional,
  types: list<string> #optional,
  uid: string #required,
  uid_alt: string #optional,
}

// The check object defines a specific, testable compliance verification point
// that evaluates a target device against a standard, framework, or custom
// requirement. While checks are typically associated with formal standards
// (like CIS, NIST, or ISO), they can also represent custom or organizational
// requirements. When mapped to controls, checks can evaluate specific
// control_parameters to determine compliance status, but neither the control
// mapping nor control_parameters are required for a valid check.
type _ocsf.v1_6_0_dev.object.check = record{
  desc: string #optional,
  name: string #recommended,
  severity: string #optional,
  severity_id: int64 #optional,
  standards: list<string> #recommended,
  status: string #recommended,
  status_id: int64 #recommended,
  uid: string #recommended,
  version: string #optional,
}

// The Operating System (OS) object describes characteristics of an OS, such as
// Linux or Windows.
type _ocsf.v1_6_0_dev.object.os = record{
  build: string #optional,
  country: string #optional,
  cpe_name: string #optional,
  cpu_bits: int64 #optional,
  edition: string #optional,
  kernel_release: string #optional,
  lang: string #optional,
  name: string #required,
  sp_name: string #optional,
  sp_ver: int64 #optional,
  type: string #optional,
  type_id: int64 #required,
  version: string #optional,
}

// The System for Cross-domain Identity Management (SCIM) Configuration object
// provides a structured set of attributes related to SCIM protocols used for
// identity provisioning and management across cloud-based platforms. It
// standardizes user and group provisioning details, enabling identity
// synchronization and lifecycle management with compatible Identity Providers
// (IdPs) and applications. SCIM is defined in <a target='_blank'
// href='https://datatracker.ietf.org/doc/html/rfc7643'>RFC-7634</a>
type _ocsf.v1_6_0_dev.object.scim = record{
  auth_protocol: string #optional,
  auth_protocol_id: int64 #optional,
  created_time: time #optional,
  error_message: string #optional,
  is_group_provisioning_enabled: bool #optional,
  is_user_provisioning_enabled: bool #optional,
  last_run_time: time #optional,
  modified_time: time #optional,
  name: string #recommended,
  protocol_name: string #optional,
  rate_limit: int64 #optional,
  scim_group_schema: string #print_json #recommended,
  scim_user_schema: string #print_json #recommended,
  state: string #optional,
  state_id: int64 #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  url_string: string #optional,
  vendor_name: string #optional,
  version: string #recommended,
}

// The Organization object describes characteristics of an organization or
// company and its division if any. Additionally, it also describes cloud and
// Software-as-a-Service (SaaS) logical hierarchies such as AWS Organizations,
// Google Cloud Organizations, Oracle Cloud Tenancies, and similar constructs.
type _ocsf.v1_6_0_dev.object.organization = record{
  name: string #recommended,
  ou_name: string #recommended,
  ou_uid: string #optional,
  uid: string #recommended,
}

// The Cloud object contains information about a cloud or Software-as-a-Service
// account or similar construct, such as AWS Account ID, regions, organizations,
// folders, compartments, tenants, etc.
type _ocsf.v1_6_0_dev.object.cloud = record{
  account: _ocsf.v1_6_0_dev.object.account #optional,
  cloud_partition: string #optional,
  org: _ocsf.v1_6_0_dev.object.organization #optional,
  project_uid: string #optional,
  provider: string #required,
  region: string #recommended,
  zone: string #optional,
}

// This object is a used to capture strings which may be truncated by a security
// product due to their length.
type _ocsf.v1_6_0_dev.object.long_string = record{
  is_truncated: bool #optional,
  untruncated_size: int64 #optional,
  value: string #required,
}

// The Common Vulnerabilities and Exposures (CVE) object represents publicly
// disclosed cybersecurity vulnerabilities defined in CVE Program catalog (<a
// target='_blank' href='https://cve.mitre.org/'>CVE</a>). There is one CVE
// Record for each vulnerability in the catalog.
type _ocsf.v1_6_0_dev.object.cve = record{
  created_time: time #recommended,
  cvss: list<_ocsf.v1_6_0_dev.object.cvss> #recommended,
  cwe: _ocsf.v1_6_0_dev.object.cwe #optional,
  cwe_uid: string #optional,
  cwe_url: string #optional,
  desc: string #optional,
  epss: _ocsf.v1_6_0_dev.object.epss #optional,
  modified_time: time #optional,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  references: list<string> #recommended,
  related_cwes: list<_ocsf.v1_6_0_dev.object.cwe> #optional,
  title: string #recommended,
  type: string #recommended,
  uid: string #required,
}

// The Policy object describes the policies that are applicable. <p>Policy
// attributes provide traceability to the operational state of the security
// product at the time that the event was captured, facilitating forensics,
// troubleshooting, and policy tuning/adjustments.</p>
type _ocsf.v1_6_0_dev.object.policy = record{
  data: string #print_json #optional,
  desc: string #optional,
  group: _ocsf.v1_6_0_dev.object.group #optional,
  is_applied: bool #recommended,
  name: string #recommended,
  uid: string #recommended,
  version: string #recommended,
}

// The RPC Interface represents the remote procedure call interface used in the
// DCE/RPC session.
type _ocsf.v1_6_0_dev.object.rpc_interface = record{
  ack_reason: int64 #recommended,
  ack_result: int64 #recommended,
  uuid: string #required,
  version: string #required,
}

// The Digital Signature object contains information about the cryptographic
// mechanism used to verify the authenticity, integrity, and origin of the file
// or application.
type _ocsf.v1_6_0_dev.object.digital_signature = record{
  algorithm: string #optional,
  algorithm_id: int64 #required,
  certificate: _ocsf.v1_6_0_dev.object.certificate #recommended,
  created_time: time #optional,
  developer_uid: string #optional,
  digest: _ocsf.v1_6_0_dev.object.fingerprint #optional,
  state: string #optional,
  state_id: int64 #optional,
}

// The Group object represents a collection or association of entities, such as
// users, policies, or devices. It serves as a logical grouping mechanism to
// organize and manage entities with similar characteristics or permissions
// within a system or organization, including but not limited to purposes of
// access control.
type _ocsf.v1_6_0_dev.object.group = record{
  desc: string #optional,
  domain: string #optional,
  name: string #recommended,
  privileges: list<string> #optional,
  type: string #optional,
  uid: string #recommended,
}

// The Account object contains details about the account that initiated or
// performed a specific activity within a system or application. Additionally,
// the Account object refers to logical Cloud and Software-as-a-Service (SaaS)
// based containers such as AWS Accounts, Azure Subscriptions, Oracle Cloud
// Compartments, Google Cloud Projects, and otherwise.
type _ocsf.v1_6_0_dev.object.account = record{
  labels: list<string> #optional,
  name: string #recommended,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
}

// The CIS Benchmark object describes best practices for securely configuring IT
// systems, software, networks, and cloud infrastructure as defined by the <a
// target='_blank' href='https://www.cisecurity.org/cis-benchmarks/'>Center for
// Internet Security</a>. See also <a target='_blank'
// href='https://www.cisecurity.org/insights/blog/getting-to-know-the-cis-
// benchmarks'>Getting to Know the CIS Benchmarks</a>.
type _ocsf.v1_6_0_dev.object.cis_benchmark = record{
  cis_controls: list<_ocsf.v1_6_0_dev.object.cis_control> #recommended,
  desc: string #optional,
  name: string #required,
}

// The Metadata object describes the metadata associated with the event.
type _ocsf.v1_6_0_dev.object.metadata = record{
  correlation_uid: string #optional,
  debug: list<string> #optional,
  event_code: string #optional,
  extension: _ocsf.v1_6_0_dev.object.extension #optional,
  extensions: list<_ocsf.v1_6_0_dev.object.extension> #optional,
  labels: list<string> #optional,
  log_level: string #optional,
  log_name: string #recommended,
  log_provider: string #recommended,
  log_version: string #optional,
  logged_time: time #optional,
  loggers: list<_ocsf.v1_6_0_dev.object.logger> #optional,
  modified_time: time #optional,
  original_time: string #recommended,
  processed_time: time #optional,
  product: _ocsf.v1_6_0_dev.object.product #required,
  profiles: list<string> #optional,
  sequence: int64 #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  tenant_uid: string #recommended,
  transformation_info_list: list<_ocsf.v1_6_0_dev.object.transformation_info> #optional,
  uid: string #optional,
  version: string #required,
}

// The Ticket object represents ticket in the customer's IT Service Management
// (ITSM) systems like ServiceNow, Jira, etc.
type _ocsf.v1_6_0_dev.object.ticket = record{
  src_url: string #recommended,
  status: string #optional,
  status_details: list<string> #optional,
  status_id: int64 #optional,
  title: string #optional,
  type: string #optional,
  type_id: int64 #optional,
  uid: string #recommended,
}

// The Windows Service object describes a Windows service.
type _ocsf.v1_6_0_dev.object.win_service = record{
  cmd_line: string #recommended,
  labels: list<string> #optional,
  load_order_group: string #recommended,
  name: string #required,
  service_category: string #optional,
  service_category_id: int64 #recommended,
  service_dependencies: list<string> #recommended,
  service_error_control: string #optional,
  service_error_control_id: int64 #recommended,
  service_start_name: string #recommended,
  service_start_type: string #optional,
  service_start_type_id: int64 #recommended,
  service_type: string #optional,
  service_type_id: int64 #recommended,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  uid: string #recommended,
  version: string #recommended,
}

// The Security State object describes the security related state of a managed
// entity.
type _ocsf.v1_6_0_dev.object.security_state = record{
  state: string #optional,
  state_id: int64 #recommended,
}

// The Remediation object describes the recommended remediation steps to address
// identified issue(s).
type _ocsf.v1_6_0_dev.object.remediation = record{
  cis_controls: list<_ocsf.v1_6_0_dev.object.cis_control> #optional,
  desc: string #required,
  kb_article_list: list<_ocsf.v1_6_0_dev.object.kb_article> #optional,
  kb_articles: list<string> #optional,
  references: list<string> #optional,
}

// An Application describes the details for an inventoried application as
// reported by an Application Security tool or other Developer-centric tooling.
// Applications can be defined as Kubernetes resources, Containerized resources,
// or application hosting-specific cloud sources such as AWS Elastic BeanStalk,
// AWS Lightsail, or Azure Logic Apps.
type _ocsf.v1_6_0_dev.object.application = record{
  criticality: string #optional,
  data: string #print_json #optional,
  desc: string #optional,
  group: _ocsf.v1_6_0_dev.object.group #optional,
  hostname: string #optional,
  labels: list<string> #optional,
  name: string #recommended,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  resource_relationship: _ocsf.v1_6_0_dev.object.graph #optional,
  risk_level: string #optional,
  risk_level_id: int64 #optional,
  risk_score: int64 #optional,
  sbom: _ocsf.v1_6_0_dev.object.sbom #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  url: _ocsf.v1_6_0_dev.object.url #optional,
  version: string #optional,
}

// The MITRE Sub-technique object describes the ATT&CK® or ATLAS™ Sub-technique
// ID and/or name associated to an attack.
type _ocsf.v1_6_0_dev.object.sub_technique = record{
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The Single Sign-On (SSO) object provides a structure for normalizing SSO
// attributes, configuration, and/or settings from Identity Providers.
type _ocsf.v1_6_0_dev.object.sso = record{
  auth_protocol: string #optional,
  auth_protocol_id: int64 #optional,
  certificate: _ocsf.v1_6_0_dev.object.certificate #recommended,
  created_time: time #optional,
  duration_mins: int64 #optional,
  idle_timeout: int64 #optional,
  login_endpoint: string #optional,
  logout_endpoint: string #optional,
  metadata_endpoint: string #optional,
  modified_time: time #optional,
  name: string #recommended,
  protocol_name: string #optional,
  scopes: list<string> #optional,
  uid: string #recommended,
  vendor_name: string #optional,
}

// The contact information related to a domain registration, e.g., registrant,
// administrator, abuse, billing, or technical contact.
type _ocsf.v1_6_0_dev.object.domain_contact = record{
  email_addr: string #recommended,
  location: _ocsf.v1_6_0_dev.object.location #recommended,
  name: string #optional,
  phone_number: string #optional,
  type: string #optional,
  type_id: int64 #required,
  uid: string #optional,
}

// The Software Component object describes characteristics of a software
// component within a software package.
type _ocsf.v1_6_0_dev.object.software_component = record{
  author: string #recommended,
  hash: _ocsf.v1_6_0_dev.object.fingerprint #optional,
  license: string #optional,
  name: string #required,
  purl: string #recommended,
  related_component: string #recommended,
  relationship: string #optional,
  relationship_id: int64 #recommended,
  type: string #optional,
  type_id: int64 #recommended,
  version: string #required,
}

// The network proxy endpoint object describes a proxy server, which acts as an
// intermediary between a client requesting a resource and the server providing
// that resource.
type _ocsf.v1_6_0_dev.object.network_proxy = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  autonomous_system: _ocsf.v1_6_0_dev.object.autonomous_system #optional,
  domain: string #optional,
  hostname: string #recommended,
  hw_info: _ocsf.v1_6_0_dev.object.device_hw_info #optional,
  instance_uid: string #recommended,
  interface_name: string #recommended,
  interface_uid: string #recommended,
  intermediate_ips: list<ip> #optional,
  ip: ip #recommended,
  isp: string #optional,
  isp_org: string #optional,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  mac: string #optional,
  name: string #recommended,
  os: _ocsf.v1_6_0_dev.object.os #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  port: int64 #recommended,
  subnet_uid: string #optional,
  svc_name: string #recommended,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  vlan_uid: string #optional,
  vpc_uid: string #optional,
  zone: string #optional,
}

// Represents a connection or relationship between two nodes in a graph.
type _ocsf.v1_6_0_dev.object.edge = record{
  data: string #print_json #optional,
  is_directed: bool #optional,
  name: string #recommended,
  relation: string #recommended,
  source: string #required,
  target: string #required,
  uid: string #recommended,
}

// The User object describes the characteristics of a user/person or a security
// principal.
type _ocsf.v1_6_0_dev.object.user = record{
  account: _ocsf.v1_6_0_dev.object.account #optional,
  credential_uid: string #optional,
  display_name: string #optional,
  domain: string #optional,
  email_addr: string #optional,
  forward_addr: string #optional,
  full_name: string #optional,
  groups: list<_ocsf.v1_6_0_dev.object.group> #optional,
  has_mfa: bool #recommended,
  ldap_person: _ocsf.v1_6_0_dev.object.ldap_person #optional,
  name: string #recommended,
  org: _ocsf.v1_6_0_dev.object.organization #optional,
  phone_number: string #optional,
  risk_level: string #optional,
  risk_level_id: int64 #optional,
  risk_score: int64 #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  uid_alt: string #optional,
}

// The Kernel Extension object describes a kernel driver that has been loaded or
// unloaded into the operating system (OS) kernel.
type _ocsf.v1_6_0_dev.object.kernel_driver = record{
  file: _ocsf.v1_6_0_dev.object.file #required,
}

// The HTTP Cookie object, also known as a web cookie or browser cookie,
// contains details and values pertaining to a small piece of data that a server
// sends to a user's web browser. This data is then stored by the browser and
// sent back to the server with subsequent requests, allowing the server to
// remember and track certain information about the user's browsing session or
// preferences.
type _ocsf.v1_6_0_dev.object.http_cookie = record{
  domain: string #optional,
  expiration_time: time #optional,
  http_only: bool #optional,
  is_http_only: bool #optional,
  is_secure: bool #optional,
  name: string #required,
  path: string #optional,
  samesite: string #optional,
  secure: bool #optional,
  value: string #required,
}

// The Vendor Attributes object can be used to represent values of attributes
// populated by the Vendor/Finding Provider. It can help distinguish between the
// vendor-provided values and consumer-updated values, of key attributes like
// <code>severity_id</code>.<br>The original finding producer should not
// populate this object. It should be populated by consuming systems that
// support data mutability.
type _ocsf.v1_6_0_dev.object.vendor_attributes = record{
  severity: string #optional,
  severity_id: int64 #optional,
}

// The KB Article object contains metadata that describes the patch or update.
type _ocsf.v1_6_0_dev.object.kb_article = record{
  avg_timespan: _ocsf.v1_6_0_dev.object.timespan #optional,
  bulletin: string #optional,
  classification: string #optional,
  created_time: time #optional,
  install_state: string #recommended,
  install_state_id: int64 #recommended,
  is_superseded: bool #optional,
  os: _ocsf.v1_6_0_dev.object.os #recommended,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  severity: string #recommended,
  size: int64 #optional,
  src_url: string #optional,
  title: string #recommended,
  uid: string #required,
}

// The MITRE D3FEND™ object describes the tactic & technique associated with a
// countermeasure.
type _ocsf.v1_6_0_dev.object.d3fend = record{
  d3f_tactic: _ocsf.v1_6_0_dev.object.d3f_tactic #recommended,
  d3f_technique: _ocsf.v1_6_0_dev.object.d3f_technique #recommended,
  version: string #recommended,
}

// The Container object describes an instance of a specific container. A
// container is a prepackaged, portable system image that runs isolated on an
// existing system using a container runtime like containerd.
type _ocsf.v1_6_0_dev.object.container = record{
  hash: _ocsf.v1_6_0_dev.object.fingerprint #recommended,
  image: _ocsf.v1_6_0_dev.object.image #recommended,
  labels: list<string> #optional,
  name: string #recommended,
  network_driver: string #optional,
  orchestrator: string #optional,
  pod_uuid: string #optional,
  runtime: string #optional,
  size: int64 #recommended,
  tag: string #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  uid: string #recommended,
}

// The HTTP Header object represents the headers sent in an HTTP request or
// response. HTTP headers are key-value pairs that convey additional information
// about the HTTP message, including details about the content, caching,
// authentication, encoding, and other aspects of the communication.
type _ocsf.v1_6_0_dev.object.http_header = record{
  name: string #required,
  value: string #required,
}

// The Session object describes details about an authenticated session. e.g.
// Session Creation Time, Session Issuer.
type _ocsf.v1_6_0_dev.object.session = record{
  count: int64 #optional,
  created_time: time #recommended,
  credential_uid: string #optional,
  expiration_reason: string #optional,
  expiration_time: time #optional,
  is_mfa: bool #optional,
  is_remote: bool #recommended,
  is_vpn: bool #optional,
  issuer: string #recommended,
  terminal: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  uuid: string #optional,
}

// The Managed Entity object describes the type and version of an entity, such
// as a user, device, or policy.  For types in the <code>type_id</code> enum
// list, an associated attribute should be populated.  If the type of entity is
// not in the <code>type_id</code> list, information can be put into the
// <code>data</code> attribute, <code>type_id</code> should be 'Other' and the
// <code>type</code> attribute should label the entity type.
type _ocsf.v1_6_0_dev.object.managed_entity = record{
  data: string #print_json #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  email: _ocsf.v1_6_0_dev.object.email #recommended,
  group: _ocsf.v1_6_0_dev.object.group #recommended,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  name: string #recommended,
  org: _ocsf.v1_6_0_dev.object.organization #recommended,
  policy: _ocsf.v1_6_0_dev.object.policy #recommended,
  type: string #recommended,
  type_id: int64 #recommended,
  uid: string #recommended,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
  version: string #recommended,
}

// The Endpoint Connection object contains information detailing a connection
// attempt to an endpoint.
type _ocsf.v1_6_0_dev.object.endpoint_connection = record{
  code: int64 #recommended,
  network_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
}

// The MITRE Tactic object describes the ATT&CK® or ATLAS™ Tactic ID and/or name
// that is associated to an attack.
type _ocsf.v1_6_0_dev.object.tactic = record{
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The startup item object describes an application component that has
// associated startup criteria and configurations.
type _ocsf.v1_6_0_dev.object.startup_item = record{
  driver: _ocsf.v1_6_0_dev.object.kernel_driver #optional,
  job: _ocsf.v1_6_0_dev.object.job #optional,
  name: string #required,
  process: _ocsf.v1_6_0_dev.object.process #optional,
  run_mode_ids: list<int64> #optional,
  run_modes: list<string> #optional,
  run_state: string #optional,
  run_state_id: int64 #recommended,
  start_type: string #optional,
  start_type_id: int64 #required,
  type: string #optional,
  type_id: int64 #recommended,
  win_service: _ocsf.v1_6_0_dev.object.win_service #optional,
}

// The databucket object is a basic container that holds data, typically
// organized through the use of data partitions.
type _ocsf.v1_6_0_dev.object.databucket = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  created_time: time #optional,
  criticality: string #optional,
  data: string #print_json #optional,
  desc: string #optional,
  encryption_details: _ocsf.v1_6_0_dev.object.encryption_details #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  group: _ocsf.v1_6_0_dev.object.group #optional,
  groups: list<_ocsf.v1_6_0_dev.object.group> #optional,
  hostname: string #recommended,
  ip: ip #recommended,
  is_backed_up: bool #optional,
  is_encrypted: bool #optional,
  is_public: bool #recommended,
  labels: list<string> #optional,
  modified_time: time #optional,
  name: string #recommended,
  namespace: string #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  resource_relationship: _ocsf.v1_6_0_dev.object.graph #optional,
  size: int64 #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #recommended,
  type_id: int64 #required,
  uid: string #recommended,
  uid_alt: string #optional,
  version: string #optional,
}

// The Rule object describes characteristics of a rule associated with a policy
// or an event.
type _ocsf.v1_6_0_dev.object.rule = record{
  category: string #optional,
  desc: string #optional,
  name: string #recommended,
  type: string #optional,
  uid: string #recommended,
  version: string #optional,
}

// Describes a characteristic or feature of an entity that was observed. For
// example, this object can be used to represent specific characteristics
// derived from events or findings that can be surfaced as distinguishing traits
// of the entity in question.
type _ocsf.v1_6_0_dev.object.trait = record{
  category: string #optional,
  name: string #recommended,
  type: string #optional,
  uid: string #recommended,
  values: list<string> #optional,
}

// The CIS Benchmark Result object contains information as defined by the Center
// for Internet Security (<a target='_blank'
// href='https://www.cisecurity.org/cis-benchmarks/'>CIS</a>) benchmark result.
// CIS Benchmarks are a collection of best practices for securely configuring IT
// systems, software, networks, and cloud infrastructure.
type _ocsf.v1_6_0_dev.object.cis_benchmark_result = record{
  desc: string #optional,
  name: string #required,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  rule: _ocsf.v1_6_0_dev.object.rule #optional,
}

// The Authorization Result object provides details about the authorization
// outcome and associated policies related to activity.
type _ocsf.v1_6_0_dev.object.authorization = record{
  decision: string #recommended,
  policy: _ocsf.v1_6_0_dev.object.policy #optional,
}

// The Resource Details object describes details about resources that were
// affected by the activity/event.
type _ocsf.v1_6_0_dev.object.resource_details = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  created_time: time #optional,
  criticality: string #optional,
  data: string #print_json #optional,
  group: _ocsf.v1_6_0_dev.object.group #optional,
  hostname: string #recommended,
  ip: ip #recommended,
  is_backed_up: bool #optional,
  labels: list<string> #optional,
  modified_time: time #optional,
  name: string #recommended,
  namespace: string #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  resource_relationship: _ocsf.v1_6_0_dev.object.graph #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  version: string #optional,
}

// The Network Interface object describes the type and associated attributes of
// a physical or virtual network interface.
type _ocsf.v1_6_0_dev.object.network_interface = record{
  hostname: string #recommended,
  ip: ip #recommended,
  mac: string #recommended,
  name: string #recommended,
  namespace: string #optional,
  subnet_prefix: int64 #optional,
  type: string #optional,
  type_id: int64 #required,
  uid: string #optional,
}

// The Affected Package object describes details about a software package
// identified as affected by a vulnerability/vulnerabilities.
type _ocsf.v1_6_0_dev.object.affected_package = record{
  architecture: string #recommended,
  cpe_name: string #optional,
  epoch: int64 #optional,
  fixed_in_version: string #optional,
  hash: _ocsf.v1_6_0_dev.object.fingerprint #optional,
  license: string #optional,
  license_url: string #optional,
  name: string #required,
  package_manager: string #optional,
  package_manager_url: string #optional,
  path: string #optional,
  purl: string #optional,
  release: string #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  src_url: string #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #optional,
  vendor_name: string #optional,
  version: string #required,
}

// The Metric object defines a simple name/value pair entity for a metric.
type _ocsf.v1_6_0_dev.object.metric = record{
  name: string #required,
  value: string #required,
}

// The Image object provides a description of a specific Virtual Machine (VM) or
// Container image.
type _ocsf.v1_6_0_dev.object.image = record{
  labels: list<string> #optional,
  name: string #recommended,
  path: string #optional,
  tag: string #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  uid: string #required,
}

// The Logger object represents the device and product where events are stored
// with times for receipt and transmission.  This may be at the source device
// where the event occurred, a remote scanning device, intermediate hops, or the
// ultimate destination.
type _ocsf.v1_6_0_dev.object.logger = record{
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  event_uid: string #optional,
  log_level: string #optional,
  log_name: string #recommended,
  log_provider: string #recommended,
  log_version: string #optional,
  logged_time: time #recommended,
  name: string #recommended,
  product: _ocsf.v1_6_0_dev.object.product #recommended,
  transmit_time: time #optional,
  uid: string #recommended,
  version: string #optional,
}

// The Keyboard Information object contains details and attributes related to a
// computer or device keyboard. It encompasses information that describes the
// characteristics, capabilities, and configuration of the keyboard.
type _ocsf.v1_6_0_dev.object.keyboard_info = record{
  function_keys: int64 #optional,
  ime: string #optional,
  keyboard_layout: string #optional,
  keyboard_subtype: int64 #optional,
  keyboard_type: string #optional,
}

// A record of an observed value or event that captures the timing and frequency
// of its occurrence. Used to track when values/events were first detected, last
// detected, and their total occurrence count.
type _ocsf.v1_6_0_dev.object.observation = record{
  count: int64 #recommended,
  timespan: _ocsf.v1_6_0_dev.object.timespan #recommended,
  value: string #required,
}

// The MITRE D3FEND™ Technique object describes the leaf defensive technique ID
// and/or name associated to a countermeasure.
type _ocsf.v1_6_0_dev.object.d3f_technique = record{
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The Digital Certificate, also known as a Public Key Certificate, object
// contains information about the ownership and usage of a public key. It serves
// as a means to establish trust in the authenticity and integrity of the public
// key and the associated entity.
type _ocsf.v1_6_0_dev.object.certificate = record{
  created_time: time #recommended,
  expiration_time: time #recommended,
  fingerprints: list<_ocsf.v1_6_0_dev.object.fingerprint> #recommended,
  is_self_signed: bool #recommended,
  issuer: string #required,
  sans: list<_ocsf.v1_6_0_dev.object.san> #optional,
  serial_number: string #required,
  subject: string #recommended,
  uid: string #optional,
  version: string #recommended,
}

// The Authentication Token object contains the attributes pertaining to an
// authentication token, ticket, or assertion e.g. Kerberos, OIDC, SAML.
type _ocsf.v1_6_0_dev.object.authentication_token = record{
  created_time: time #recommended,
  encryption_details: _ocsf.v1_6_0_dev.object.encryption_details #recommended,
  expiration_time: time #optional,
  is_renewable: bool #optional,
  kerberos_flags: string #recommended,
  type: string #recommended,
  type_id: int64 #recommended,
}

// Threat actor is responsible for the observed malicious activity.
type _ocsf.v1_6_0_dev.object.threat_actor = record{
  name: string #required,
  type: string #optional,
  type_id: int64 #recommended,
}

// The transformation_info object represents the mapping or transformation used.
type _ocsf.v1_6_0_dev.object.transformation_info = record{
  lang: string #optional,
  name: string #recommended,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  time: time #recommended,
  uid: string #optional,
  url_string: string #recommended,
}

// The Device Hardware Information object contains details and specifications of
// the physical components that make up a device. This information provides an
// overview of the hardware capabilities, configuration, and characteristics of
// the device.
type _ocsf.v1_6_0_dev.object.device_hw_info = record{
  bios_date: string #optional,
  bios_manufacturer: string #optional,
  bios_ver: string #optional,
  chassis: string #optional,
  cpu_architecture: string #optional,
  cpu_architecture_id: int64 #optional,
  cpu_bits: int64 #optional,
  cpu_cores: int64 #optional,
  cpu_count: int64 #optional,
  cpu_speed: int64 #optional,
  cpu_type: string #optional,
  desktop_display: _ocsf.v1_6_0_dev.object.display #optional,
  keyboard_info: _ocsf.v1_6_0_dev.object.keyboard_info #optional,
  ram_size: int64 #optional,
  serial_number: string #optional,
  uuid: string #optional,
  vendor_name: string #optional,
}

// The CIS Critical Security Control (CSC) contains information as defined by
// the Center for Internet Security Critical Security Control <a target='_blank'
// href='https://www.cisecurity.org/controls'>(CIS CSC)</a>. Prioritized set of
// actions to protect your organization and data from cyber-attack vectors.
type _ocsf.v1_6_0_dev.object.cis_csc = record{
  control: string #required,
  version: string #recommended,
}

// The Compliance object contains information about Industry and Regulatory
// Framework standards, controls and requirements or details about custom
// assessments utilized in a compliance evaluation. Standards define broad
// security frameworks, controls represent specific security requirements within
// those frameworks, and checks are the testable verification points used to
// determine if controls are properly implemented.
type _ocsf.v1_6_0_dev.object.compliance = record{
  assessments: list<_ocsf.v1_6_0_dev.object.assessment> #optional,
  category: string #optional,
  checks: list<_ocsf.v1_6_0_dev.object.check> #optional,
  compliance_references: list<_ocsf.v1_6_0_dev.object.kb_article> #optional,
  compliance_standards: list<_ocsf.v1_6_0_dev.object.kb_article> #optional,
  control: string #recommended,
  control_parameters: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  desc: string #optional,
  requirements: list<string> #optional,
  standards: list<string> #recommended,
  status: string #recommended,
  status_code: string #optional,
  status_detail: string #optional,
  status_details: list<string> #optional,
  status_id: int64 #recommended,
}

// The Aircraft object represents any aircraft or otherwise airborne asset such
// as an unmanned system, airplane, balloon, spacecraft, or otherwise. The
// Aircraft object is intended to normalized data captured or otherwise logged
// from active radar, passive radar, multi-spectral systems, or the Automatic
// Dependant Broadcast - Surveillance (ADS-B), and/or Mode S systems.
type _ocsf.v1_6_0_dev.object.aircraft = record{
  location: _ocsf.v1_6_0_dev.object.location #recommended,
  model: string #optional,
  name: string #recommended,
  serial_number: string #optional,
  speed: string #optional,
  speed_accuracy: string #optional,
  track_direction: string #optional,
  uid: string #recommended,
  uid_alt: string #optional,
  vertical_speed: string #optional,
}

// A graph data structure representation with nodes and edges.
type _ocsf.v1_6_0_dev.object.graph = record{
  desc: string #optional,
  edges: list<_ocsf.v1_6_0_dev.object.edge> #optional,
  is_directed: bool #optional,
  name: string #recommended,
  nodes: list<_ocsf.v1_6_0_dev.object.node> #required,
  query_language: string #optional,
  query_language_id: int64 #recommended,
  type: string #optional,
  uid: string #recommended,
}

// The Related Event object describes an event or another finding related to a
// finding. It may or may not be an OCSF event.
type _ocsf.v1_6_0_dev.object.related_event = record{
  attacks: list<_ocsf.v1_6_0_dev.object.attack> #optional,
  count: int64 #optional,
  created_time: time #optional,
  desc: string #optional,
  first_seen_time: time #optional,
  kill_chain: list<_ocsf.v1_6_0_dev.object.kill_chain_phase> #optional,
  last_seen_time: time #optional,
  modified_time: time #optional,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #optional,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  product_uid: string #optional,
  severity: string #optional,
  severity_id: int64 #recommended,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  title: string #optional,
  traits: list<_ocsf.v1_6_0_dev.object.trait> #optional,
  type: string #optional,
  type_name: string #optional,
  type_uid: int64 #recommended,
  uid: string #required,
}

// The Kill Chain Phase object represents a single phase of a cyber attack,
// including the initial reconnaissance and planning stages up to the final
// objective of the attacker. It provides a detailed description of each phase
// and its associated activities within the broader context of a cyber attack.
// See <a target='_blank' href='https://www.lockheedmartin.com/en-
// us/capabilities/cyber/cyber-kill-chain.html'>Cyber Kill Chain®</a>.
type _ocsf.v1_6_0_dev.object.kill_chain_phase = record{
  phase: string #recommended,
  phase_id: int64 #required,
}

// The Time Span object represents different time period durations. If a
// timespan is fractional, i.e. crosses one period, e.g. a week and 3 days, more
// than one may be populated since each member is of integral type. In that case
// <code>type_id</code> if present should be set to <code>Other.</code><P>A
// timespan may also be defined by its time interval boundaries,
// <code>start_time</code> and <code>end_time</code>.
type _ocsf.v1_6_0_dev.object.timespan = record{
  duration: int64 #recommended,
  duration_days: int64 #recommended,
  duration_hours: int64 #recommended,
  duration_mins: int64 #recommended,
  duration_months: int64 #recommended,
  duration_secs: int64 #recommended,
  duration_weeks: int64 #recommended,
  duration_years: int64 #recommended,
  end_time: time #recommended,
  start_time: time #recommended,
  type: string #optional,
  type_id: int64 #recommended,
}

// The MITRE D3FEND™ Tactic object describes the tactic ID and/or name that is
// associated to an attack.
type _ocsf.v1_6_0_dev.object.d3f_tactic = record{
  name: string #recommended,
  src_url: string #optional,
  uid: string #recommended,
}

// The Email Authentication object describes the Sender Policy Framework (SPF),
// DomainKeys Identified Mail (DKIM) and Domain-based Message Authentication,
// Reporting and Conformance (DMARC) attributes of an email.
type _ocsf.v1_6_0_dev.object.email_auth = record{
  dkim: string #recommended,
  dkim_domain: string #recommended,
  dkim_signature: string #recommended,
  dmarc: string #recommended,
  dmarc_override: string #recommended,
  dmarc_policy: string #recommended,
  spf: string #recommended,
}

// The Request Elements object describes characteristics of an API request.
type _ocsf.v1_6_0_dev.object.request = record{
  containers: list<_ocsf.v1_6_0_dev.object.container> #optional,
  data: string #print_json #optional,
  flags: list<string> #optional,
  uid: string #required,
}

// The Transport Layer Security (TLS) object describes the negotiated TLS
// protocol used for secure communications over an establish network connection.
type _ocsf.v1_6_0_dev.object.tls = record{
  alert: int64 #optional,
  certificate: _ocsf.v1_6_0_dev.object.certificate #recommended,
  certificate_chain: list<string> #recommended,
  cipher: string #recommended,
  client_ciphers: list<string> #recommended,
  extension_list: list<_ocsf.v1_6_0_dev.object.tls_extension> #optional,
  handshake_dur: int64 #optional,
  ja3_hash: _ocsf.v1_6_0_dev.object.fingerprint #recommended,
  ja3s_hash: _ocsf.v1_6_0_dev.object.fingerprint #recommended,
  key_length: int64 #optional,
  sans: list<_ocsf.v1_6_0_dev.object.san> #optional,
  server_ciphers: list<string> #optional,
  sni: string #recommended,
  tls_extension_list: list<_ocsf.v1_6_0_dev.object.tls_extension> #optional,
  version: string #required,
}

// The Subject Alternative name (SAN) object describes a SAN secured by a
// digital certificate
type _ocsf.v1_6_0_dev.object.san = record{
  name: string #required,
  type: string #required,
}

// The Enrichment object provides inline enrichment data for specific attributes
// of interest within an event. It serves as a mechanism to enhance or
// supplement the information associated with the event by adding additional
// relevant details or context.
type _ocsf.v1_6_0_dev.object.enrichment = record{
  created_time: time #recommended,
  data: string #print_json #required,
  desc: string #optional,
  name: string #required,
  provider: string #recommended,
  reputation: _ocsf.v1_6_0_dev.object.reputation #optional,
  short_desc: string #recommended,
  src_url: string #recommended,
  type: string #recommended,
  value: string #required,
}

// An Agent (also known as a Sensor) is typically installed on an Operating
// System (OS) and serves as a specialized software component that can be
// designed to monitor, detect, collect, archive, or take action. These
// activities and possible actions are defined by the upstream system
// controlling the Agent and its intended purpose. For instance, an Agent can
// include Endpoint Detection & Response (EDR) agents, backup/disaster recovery
// sensors, Application Performance Monitoring or profiling sensors, and similar
// software.
type _ocsf.v1_6_0_dev.object.agent = record{
  name: string #recommended,
  policies: list<_ocsf.v1_6_0_dev.object.policy> #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  uid_alt: string #optional,
  vendor_name: string #optional,
  version: string #optional,
}

// The resources of a WHOIS record for a given domain. This can include domain
// names, IP address blocks, autonomous system information, and/or contact and
// registration information for a domain.
type _ocsf.v1_6_0_dev.object.whois = record{
  autonomous_system: _ocsf.v1_6_0_dev.object.autonomous_system #optional,
  created_time: time #recommended,
  dnssec_status: string #optional,
  dnssec_status_id: int64 #recommended,
  domain: string #recommended,
  domain_contacts: list<_ocsf.v1_6_0_dev.object.domain_contact> #recommended,
  email_addr: string #optional,
  isp: string #optional,
  isp_org: string #optional,
  last_seen_time: time #recommended,
  name_servers: list<string> #recommended,
  phone_number: string #optional,
  registrar: string #recommended,
  status: string #recommended,
  subdomains: list<string> #optional,
  subnet: subnet #optional,
}

// The Advisory object represents publicly disclosed cybersecurity
// vulnerabilities defined in a Security advisory. e.g. <code> Microsoft KB
// Article</code>, <code>Apple Security Advisory</code>, or a <code>GitHub
// Security Advisory (GHSA)</code>
type _ocsf.v1_6_0_dev.object.advisory = record{
  avg_timespan: _ocsf.v1_6_0_dev.object.timespan #optional,
  bulletin: string #optional,
  classification: string #optional,
  created_time: time #recommended,
  desc: string #optional,
  install_state: string #recommended,
  install_state_id: int64 #recommended,
  is_superseded: bool #optional,
  modified_time: time #optional,
  os: _ocsf.v1_6_0_dev.object.os #recommended,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  references: list<string> #recommended,
  related_cves: list<_ocsf.v1_6_0_dev.object.cve> #optional,
  related_cwes: list<_ocsf.v1_6_0_dev.object.cwe> #optional,
  size: int64 #optional,
  src_url: string #optional,
  title: string #recommended,
  uid: string #required,
}

// The Display object contains information about the physical or virtual display
// connected to a computer system.
type _ocsf.v1_6_0_dev.object.display = record{
  color_depth: int64 #optional,
  physical_height: int64 #optional,
  physical_orientation: int64 #optional,
  physical_width: int64 #optional,
  scale_factor: int64 #optional,
}

// The Discovery Details object describes results of a discovery task/job.
type _ocsf.v1_6_0_dev.object.discovery_details = record{
  count: int64 #recommended,
  occurrence_details: _ocsf.v1_6_0_dev.object.occurrence_details #optional,
  occurrences: list<_ocsf.v1_6_0_dev.object.occurrence_details> #optional,
  type: string #recommended,
  value: string #optional,
}

// The Response Elements object describes characteristics of an API response.
type _ocsf.v1_6_0_dev.object.response = record{
  code: int64 #recommended,
  containers: list<_ocsf.v1_6_0_dev.object.container> #optional,
  data: string #print_json #optional,
  error: string #recommended,
  error_message: string #recommended,
  flags: list<string> #optional,
  message: string #recommended,
}

// The vulnerability is an unintended characteristic of a computing component or
// system configuration that multiplies the risk of an adverse event or a loss
// occurring either due to accidental exposure, deliberate attack, or conflict
// with new system components.
type _ocsf.v1_6_0_dev.object.vulnerability = record{
  advisory: _ocsf.v1_6_0_dev.object.advisory #optional,
  affected_code: list<_ocsf.v1_6_0_dev.object.affected_code> #optional,
  affected_packages: list<_ocsf.v1_6_0_dev.object.affected_package> #optional,
  category: string #optional,
  cve: _ocsf.v1_6_0_dev.object.cve #recommended,
  cwe: _ocsf.v1_6_0_dev.object.cwe #recommended,
  dependency_chain: string #optional,
  desc: string #optional,
  exploit_last_seen_time: time #optional,
  exploit_ref_url: string #optional,
  exploit_requirement: string #optional,
  exploit_type: string #optional,
  first_seen_time: time #optional,
  fix_available: bool #optional,
  fix_coverage: string #optional,
  fix_coverage_id: int64 #optional,
  is_exploit_available: bool #optional,
  is_fix_available: bool #optional,
  kb_article_list: list<_ocsf.v1_6_0_dev.object.kb_article> #optional,
  kb_articles: list<string> #optional,
  last_seen_time: time #optional,
  packages: list<_ocsf.v1_6_0_dev.object.package> #optional,
  references: list<string> #recommended,
  related_vulnerabilities: list<string> #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  severity: string #optional,
  title: string #optional,
  vendor_name: string #optional,
}

// The Scan object describes characteristics of a proactive scan.
type _ocsf.v1_6_0_dev.object.scan = record{
  name: string #recommended,
  type: string #optional,
  type_id: int64 #required,
  uid: string #recommended,
}

// The Kernel Resource object provides information about a specific kernel
// resource, including its name and type. It describes essential attributes
// associated with a resource managed by the kernel of an operating system.
type _ocsf.v1_6_0_dev.object.kernel = record{
  is_system: bool #optional,
  name: string #required,
  path: string #optional,
  system_call: string #optional,
  type: string #optional,
  type_id: int64 #required,
}

// The Windows resource object describes a resource object managed by Windows,
// such as mutant or timer.
type _ocsf.v1_6_0_dev.object.win_resource = record{
  created_time: time #optional,
  data: string #print_json #optional,
  details: string #optional,
  labels: list<string> #optional,
  modified_time: time #optional,
  name: string #recommended,
  svc_name: string #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
  type: string #optional,
  type_id: int64 #required,
  uid: string #recommended,
  uid_alt: string #optional,
}

// Campaign represent organized efforts by threat actors to achieve malicious
// objectives over a period, often characterized by shared tactics, techniques,
// and procedures (TTPs).
type _ocsf.v1_6_0_dev.object.campaign = record{
  name: string #required,
}

// The database object is used for databases which are typically datastore
// services that contain an organized collection of structured and unstructured
// data or a types of data.
type _ocsf.v1_6_0_dev.object.database = record{
  created_time: time #optional,
  desc: string #optional,
  groups: list<_ocsf.v1_6_0_dev.object.group> #optional,
  modified_time: time #optional,
  name: string #recommended,
  size: int64 #optional,
  type: string #recommended,
  type_id: int64 #required,
  uid: string #recommended,
}

// The analysis target defines the scope of monitored activities, specifying
// what entity, system or process is analyzed for activity patterns.
type _ocsf.v1_6_0_dev.object.analysis_target = record{
  name: string #required,
  type: string #optional,
}

// The Unmanned Aerial System object describes the characteristics, Position
// Location Information (PLI), and other metadata of Unmanned Aerial Systems
// (UAS) and other unmanned and drone systems used in Remote ID. Remote ID is
// defined in the Standard Specification for Remote ID and Tracking (ASTM
// Designation: F3411-22a) <a target='_blank' href='https://cdn.standards.iteh.a
// i/samples/112830/71297057ac42432880a203654f213709/ASTM-F3411-22a.pdf'>ASTM
// F3411-22a</a>.
type _ocsf.v1_6_0_dev.object.unmanned_aerial_system = record{
  hw_info: _ocsf.v1_6_0_dev.object.device_hw_info #optional,
  location: _ocsf.v1_6_0_dev.object.location #recommended,
  model: string #optional,
  name: string #optional,
  serial_number: string #recommended,
  speed: string #optional,
  speed_accuracy: string #optional,
  track_direction: string #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  uid_alt: string #recommended,
  uuid: string #recommended,
  vertical_speed: string #optional,
}

// The Unmanned System Operating Area object describes details about a precise
// area of operations for a UAS flight or mission.
type _ocsf.v1_6_0_dev.object.unmanned_system_operating_area = record{
  aerial_height: string #optional,
  altitude_ceiling: string #optional,
  altitude_floor: string #optional,
  city: string #recommended,
  continent: string #recommended,
  coordinates: list<double> #optional,
  count: int64 #recommended,
  country: string #recommended,
  desc: string #optional,
  end_time: time #optional,
  geodetic_altitude: string #optional,
  geodetic_vertical_accuracy: string #optional,
  geohash: string #optional,
  horizontal_accuracy: string #optional,
  is_on_premises: bool #optional,
  isp: string #optional,
  lat: double #optional,
  locations: list<_ocsf.v1_6_0_dev.object.location> #recommended,
  long: double #optional,
  postal_code: string #optional,
  pressure_altitude: string #optional,
  provider: string #optional,
  radius: string #optional,
  region: string #optional,
  start_time: time #optional,
  type: string #optional,
  type_id: int64 #recommended,
}

// The Geo Location object describes a geographical location, usually associated
// with an IP address.
type _ocsf.v1_6_0_dev.object.location = record{
  aerial_height: string #optional,
  city: string #recommended,
  continent: string #recommended,
  coordinates: list<double> #optional,
  country: string #recommended,
  desc: string #optional,
  geodetic_altitude: string #optional,
  geodetic_vertical_accuracy: string #optional,
  geohash: string #optional,
  horizontal_accuracy: string #optional,
  is_on_premises: bool #optional,
  isp: string #optional,
  lat: double #optional,
  long: double #optional,
  postal_code: string #optional,
  pressure_altitude: string #optional,
  provider: string #optional,
  region: string #optional,
}

// The specific resulting evidence information that was queried or discovered.
// When mapping raw telemetry data users should select the appropriate child
// object that best matches the evidence type as defined by query_type_id.
type _ocsf.v1_6_0_dev.object.query_evidence = record{
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  folder: _ocsf.v1_6_0_dev.object.file #recommended,
  group: _ocsf.v1_6_0_dev.object.group #recommended,
  job: _ocsf.v1_6_0_dev.object.job #recommended,
  kernel: _ocsf.v1_6_0_dev.object.kernel #recommended,
  module: _ocsf.v1_6_0_dev.object.module #recommended,
  network_interfaces: list<_ocsf.v1_6_0_dev.object.network_interface> #recommended,
  peripheral_device: _ocsf.v1_6_0_dev.object.peripheral_device #recommended,
  process: _ocsf.v1_6_0_dev.object.process #recommended,
  query_type: string #optional,
  query_type_id: int64 #required,
  reg_key: _ocsf.v1_6_0_dev.object.reg_key #recommended,
  reg_value: _ocsf.v1_6_0_dev.object.reg_value #recommended,
  service: _ocsf.v1_6_0_dev.object.service #recommended,
  session: _ocsf.v1_6_0_dev.object.session #recommended,
  startup_item: _ocsf.v1_6_0_dev.object.startup_item #recommended,
  state: string #optional,
  tcp_state_id: int64 #optional,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
  users: list<_ocsf.v1_6_0_dev.object.user> #optional,
}

// The Classifier Details object describes details about the classifier used for
// data classification.
type _ocsf.v1_6_0_dev.object.classifier_details = record{
  name: string #recommended,
  type: string #required,
  uid: string #recommended,
}

// The OCSF Schema Extension object provides detailed information about the
// schema extension used to construct the event. The schema extensions are
// registered in the <a target='_blank' href='https://github.com/ocsf/ocsf-
// schema/blob/main/extensions.md'>extensions.md</a> file.
type _ocsf.v1_6_0_dev.object.extension = record{
  name: string #required,
  uid: string #required,
  version: string #required,
}

// The observable object is a pivot element that contains related information
// found in many places in the event.
type _ocsf.v1_6_0_dev.object.observable = record{
  name: string #recommended,
  reputation: _ocsf.v1_6_0_dev.object.reputation #optional,
  type: string #optional,
  type_id: int64 #required,
  value: string #optional,
}

// The OSINT (Open Source Intelligence) object contains details related to an
// indicator such as the indicator itself, related indicators, geolocation,
// registrar information, subdomains, analyst commentary, and other contextual
// information. This information can be used to further enrich a detection or
// finding by providing decisioning support to other analysts and engineers.
type _ocsf.v1_6_0_dev.object.osint = record{
  answers: list<_ocsf.v1_6_0_dev.object.dns_answer> #optional,
  attacks: list<_ocsf.v1_6_0_dev.object.attack> #optional,
  autonomous_system: _ocsf.v1_6_0_dev.object.autonomous_system #optional,
  campaign: _ocsf.v1_6_0_dev.object.campaign #optional,
  category: string #optional,
  comment: string #optional,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  created_time: time #optional,
  creator: _ocsf.v1_6_0_dev.object.user #optional,
  desc: string #optional,
  detection_pattern: string #optional,
  detection_pattern_type: string #optional,
  detection_pattern_type_id: int64 #optional,
  email: _ocsf.v1_6_0_dev.object.email #optional,
  email_auth: _ocsf.v1_6_0_dev.object.email_auth #optional,
  expiration_time: time #optional,
  external_uid: string #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  intrusion_sets: list<string> #optional,
  kill_chain: list<_ocsf.v1_6_0_dev.object.kill_chain_phase> #optional,
  labels: list<string> #optional,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  malware: list<_ocsf.v1_6_0_dev.object.malware> #optional,
  modified_time: time #optional,
  name: string #optional,
  references: list<string> #optional,
  related_analytics: list<_ocsf.v1_6_0_dev.object.analytic> #optional,
  reputation: _ocsf.v1_6_0_dev.object.reputation #optional,
  risk_score: int64 #optional,
  script: _ocsf.v1_6_0_dev.object.script #optional,
  severity: string #optional,
  severity_id: int64 #optional,
  signatures: list<_ocsf.v1_6_0_dev.object.digital_signature> #optional,
  src_url: string #optional,
  subdomains: list<string> #optional,
  subnet: subnet #optional,
  threat_actor: _ocsf.v1_6_0_dev.object.threat_actor #optional,
  tlp: string #recommended,
  type: string #optional,
  type_id: int64 #required,
  uid: string #optional,
  uploaded_time: time #optional,
  value: string #required,
  vendor_name: string #optional,
  vulnerabilities: list<_ocsf.v1_6_0_dev.object.vulnerability> #optional,
  whois: _ocsf.v1_6_0_dev.object.whois #optional,
}

// The Software Package object describes details about a software package.
type _ocsf.v1_6_0_dev.object.package = record{
  architecture: string #recommended,
  cpe_name: string #optional,
  epoch: int64 #optional,
  hash: _ocsf.v1_6_0_dev.object.fingerprint #optional,
  license: string #optional,
  license_url: string #optional,
  name: string #required,
  package_manager: string #optional,
  package_manager_url: string #optional,
  purl: string #optional,
  release: string #optional,
  src_url: string #optional,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #optional,
  vendor_name: string #optional,
  version: string #required,
}

// The JA4+ fingerprint object provides detailed fingerprint information about
// various aspects of network traffic which is both machine and human readable.
type _ocsf.v1_6_0_dev.object.ja4_fingerprint = record{
  section_a: string #optional,
  section_b: string #optional,
  section_c: string #optional,
  section_d: string #optional,
  type: string #optional,
  type_id: int64 #required,
  value: string #required,
}

// The Data Security object describes the characteristics, techniques and
// content of a Data Loss Prevention (DLP), Data Loss Detection (DLD), Data
// Classification, or similar tools' finding, alert, or detection mechanism(s).
type _ocsf.v1_6_0_dev.object.data_security = record{
  category: string #optional,
  category_id: int64 #recommended,
  classifier_details: _ocsf.v1_6_0_dev.object.classifier_details #recommended,
  confidentiality: string #optional,
  confidentiality_id: int64 #recommended,
  data_lifecycle_state: string #optional,
  data_lifecycle_state_id: int64 #recommended,
  detection_pattern: string #recommended,
  detection_system: string #optional,
  detection_system_id: int64 #recommended,
  discovery_details: list<_ocsf.v1_6_0_dev.object.discovery_details> #optional,
  pattern_match: string #optional,
  policy: _ocsf.v1_6_0_dev.object.policy #recommended,
  size: int64 #optional,
  src_url: string #optional,
  status: string #recommended,
  status_details: list<string> #optional,
  status_id: int64 #recommended,
  total: int64 #optional,
  uid: string #optional,
}

// The Network Traffic object describes characteristics of network traffic.
// Network traffic refers to data moving across a network at a given point of
// time.
type _ocsf.v1_6_0_dev.object.network_traffic = record{
  bytes: int64 #recommended,
  bytes_in: int64 #optional,
  bytes_missed: int64 #optional,
  bytes_out: int64 #optional,
  chunks: int64 #optional,
  chunks_in: int64 #optional,
  chunks_out: int64 #optional,
  packets: int64 #recommended,
  packets_in: int64 #optional,
  packets_out: int64 #optional,
}

// The Common Vulnerability Scoring System (<a target='_blank'
// href='https://www.first.org/cvss/'>CVSS</a>) object provides a way to capture
// the principal characteristics of a vulnerability and produce a numerical
// score reflecting its severity.
type _ocsf.v1_6_0_dev.object.cvss = record{
  base_score: double #required,
  depth: string #recommended,
  metrics: list<_ocsf.v1_6_0_dev.object.metric> #optional,
  overall_score: double #recommended,
  severity: string #optional,
  src_url: string #optional,
  vector_string: string #optional,
  vendor_name: string #recommended,
  version: string #required,
}

// A generic object allowing to define a <code>{key:value}</code> pair.
type _ocsf.v1_6_0_dev.object.key_value_object = record{
  name: string #required,
  value: string #recommended,
  values: list<string> #recommended,
}

// The load balancer object describes the load balancer entity and contains
// additional information regarding the distribution of traffic across a
// network.
type _ocsf.v1_6_0_dev.object.load_balancer = record{
  classification: string #optional,
  code: int64 #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  endpoint_connections: list<_ocsf.v1_6_0_dev.object.endpoint_connection> #recommended,
  error_message: string #optional,
  ip: ip #optional,
  message: string #optional,
  metrics: list<_ocsf.v1_6_0_dev.object.metric> #optional,
  name: string #recommended,
  status_detail: string #optional,
  uid: string #recommended,
}

// The table object represents a table within a structured relational database
// or datastore, which contains columns and rows of data that are able to be
// create, updated, deleted and queried.
type _ocsf.v1_6_0_dev.object.table = record{
  created_time: time #optional,
  desc: string #optional,
  groups: list<_ocsf.v1_6_0_dev.object.group> #optional,
  modified_time: time #optional,
  name: string #recommended,
  size: int64 #optional,
  uid: string #recommended,
}

// The Email object describes the email metadata such as sender, recipients, and
// direction, and can include embedded URLs and files.
type _ocsf.v1_6_0_dev.object.email = record{
  cc: list<string> #optional,
  cc_mailboxes: list<string> #optional,
  delivered_to: string #optional,
  delivered_to_list: list<string> #optional,
  files: list<_ocsf.v1_6_0_dev.object.file> #optional,
  from: string #recommended,
  from_mailbox: string #optional,
  http_headers: list<_ocsf.v1_6_0_dev.object.http_header> #optional,
  is_read: bool #optional,
  message_uid: string #recommended,
  raw_header: string #optional,
  reply_to: string #recommended,
  reply_to_mailboxes: list<string> #optional,
  size: int64 #recommended,
  smtp_from: string #recommended,
  smtp_to: list<string> #recommended,
  subject: string #recommended,
  to: list<string> #recommended,
  to_mailboxes: list<string> #optional,
  uid: string #recommended,
  urls: list<_ocsf.v1_6_0_dev.object.url> #optional,
  x_originating_ip: list<ip> #optional,
}

// The DNS query object represents a specific request made to the Domain Name
// System (DNS) to retrieve information about a domain or perform a DNS
// operation. This object encapsulates the necessary attributes and methods to
// construct and send DNS queries, specify the query type (e.g., A, AAAA, MX).
type _ocsf.v1_6_0_dev.object.dns_query = record{
  class: string #recommended,
  hostname: string #required,
  opcode: string #optional,
  opcode_id: int64 #recommended,
  packet_uid: int64 #recommended,
  type: string #recommended,
}

// Describes the baseline or expected behavior of a system, service, or
// component based on historical observations and measurements. It establishes
// reference points for comparison to detect anomalies, trends, and deviations
// from typical patterns.
type _ocsf.v1_6_0_dev.object.baseline = record{
  observation_parameter: string #required,
  observation_type: string #recommended,
  observations: list<_ocsf.v1_6_0_dev.object.observation> #required,
  observed_pattern: string #recommended,
}

// An Authentication Factor object describes a category of methods used for
// identity verification in an authentication attempt.
type _ocsf.v1_6_0_dev.object.auth_factor = record{
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  email_addr: string #optional,
  factor_type: string #recommended,
  factor_type_id: int64 #required,
  is_hotp: bool #recommended,
  is_totp: bool #recommended,
  phone_number: string #optional,
  provider: string #recommended,
  security_questions: list<string> #optional,
}

// The Network Endpoint object describes characteristics of a network endpoint.
// These can be a source or destination of a network connection.
type _ocsf.v1_6_0_dev.object.network_endpoint = record{
  agent_list: list<_ocsf.v1_6_0_dev.object.agent> #optional,
  autonomous_system: _ocsf.v1_6_0_dev.object.autonomous_system #optional,
  domain: string #optional,
  hostname: string #recommended,
  hw_info: _ocsf.v1_6_0_dev.object.device_hw_info #optional,
  instance_uid: string #recommended,
  interface_name: string #recommended,
  interface_uid: string #recommended,
  intermediate_ips: list<ip> #optional,
  ip: ip #recommended,
  isp: string #optional,
  isp_org: string #optional,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  mac: string #optional,
  name: string #recommended,
  os: _ocsf.v1_6_0_dev.object.os #optional,
  owner: _ocsf.v1_6_0_dev.object.user #recommended,
  port: int64 #recommended,
  proxy_endpoint: _ocsf.v1_6_0_dev.object.network_proxy #optional,
  subnet_uid: string #optional,
  svc_name: string #recommended,
  type: string #optional,
  type_id: int64 #recommended,
  uid: string #recommended,
  vlan_uid: string #optional,
  vpc_uid: string #optional,
  zone: string #optional,
}

// The additional LDAP attributes that describe a person.
type _ocsf.v1_6_0_dev.object.ldap_person = record{
  cost_center: string #optional,
  created_time: time #optional,
  deleted_time: time #optional,
  display_name: string #optional,
  email_addrs: list<string> #optional,
  employee_uid: string #optional,
  given_name: string #optional,
  hire_time: time #optional,
  job_title: string #optional,
  labels: list<string> #optional,
  last_login_time: time #optional,
  ldap_cn: string #optional,
  ldap_dn: string #optional,
  leave_time: time #optional,
  location: _ocsf.v1_6_0_dev.object.location #optional,
  modified_time: time #optional,
  office_location: string #optional,
  phone_number: string #optional,
  surname: string #optional,
  tags: list<_ocsf.v1_6_0_dev.object.key_value_object> #optional,
}

// Service Query events report information about running services.
type _ocsf.v1_6_0_dev.service_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  service: _ocsf.v1_6_0_dev.object.service #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// User Session Query events report information about existing user sessions.
type _ocsf.v1_6_0_dev.user_session_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  session: _ocsf.v1_6_0_dev.object.session #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Network Activity events report network connection and traffic activity.
type _ocsf.v1_6_0_dev.network_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  url: _ocsf.v1_6_0_dev.object.url #recommended,
}

// The Application Security Posture Finding event is a notification about any
// bug, defect, deficiency, exploit, vulnerability, weakness or any other issue
// with software and related systems. Application Security Posture Findings
// typically involve reporting on the greater context including compliance,
// impacted resources, remediation guidance, specific code defects, and/or
// vulnerability metadata. Application Security Posture Findings can be reported
// by Threat & Vulnerability Management (TVM) tools, Application Security
// Posture Management (ASPM) tools, or other similar tools. Note: if the event
// producer is a security control, the <code>security_control</code> profile
// should be applied and its <code>attacks</code> information, if present,
// should be duplicated into the <code>finding_info</code> object.
// <br><strong>Note: </strong>If the Finding is an incident, i.e. requires
// incident workflow, also apply the <code>incident</code> profile or aggregate
// this finding into an <code>Incident Finding</code>.
type _ocsf.v1_6_0_dev.application_security_posture_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  application: _ocsf.v1_6_0_dev.object.application #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  compliance: _ocsf.v1_6_0_dev.object.compliance #recommended,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  finding_info: _ocsf.v1_6_0_dev.object.finding_info #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
  vulnerabilities: list<_ocsf.v1_6_0_dev.object.vulnerability> #recommended,
}

// Event Log Activity events report actions pertaining to the system's event
// logging service(s), such as disabling logging or clearing the log data.
type _ocsf.v1_6_0_dev.event_log_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  log_name: string #recommended,
  log_provider: string #recommended,
  log_type: string #recommended,
  log_type_id: int64 #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Prefetch Query events report information about Windows prefetch files.
type _ocsf.v1_6_0_dev.prefetch_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  last_run_time: time #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  name: string #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  run_count: int64 #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Account Change events report when specific user account management tasks are
// performed, such as a user/role being created, changed, deleted, renamed,
// disabled, enabled, locked out or unlocked.
type _ocsf.v1_6_0_dev.account_change = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  policies: list<_ocsf.v1_6_0_dev.object.policy> #optional,
  policy: _ocsf.v1_6_0_dev.object.policy #optional,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
  user_result: _ocsf.v1_6_0_dev.object.user #recommended,
}

// Module Query events report information about loaded modules.
type _ocsf.v1_6_0_dev.module_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  module: _ocsf.v1_6_0_dev.object.module #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Kernel Object Query events report information about discovered kernel
// resources.
type _ocsf.v1_6_0_dev.kernel_object_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  kernel: _ocsf.v1_6_0_dev.object.kernel #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Drone Flights Activity events report the activity of Unmanned Aerial Systems
// (UAS), their Operators, and mission-planning and authorization metadata as
// reported by the UAS platforms themselves, by Counter-UAS (CUAS) systems, or
// other remote monitoring or sensing infrastructure. Based on the Remote ID
// defined in Standard Specification for Remote ID and Tracking (ASTM
// Designation: F3411-22a) <a target='_blank' href='https://cdn.standards.iteh.a
// i/samples/112830/71297057ac42432880a203654f213709/ASTM-F3411-22a.pdf'>ASTM
// F3411-22a</a>
type _ocsf.v1_6_0_dev.drone_flights_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  auth_protocol: string #optional,
  auth_protocol_id: int64 #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  classification: string #optional,
  comment: string #optional,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_name: string #optional,
  proxy_endpoint: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #optional,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #optional,
  type_name: string #optional,
  type_uid: int64 #required,
  unmanned_aerial_system: _ocsf.v1_6_0_dev.object.unmanned_aerial_system #required,
  unmanned_system_operating_area: _ocsf.v1_6_0_dev.object.unmanned_system_operating_area #recommended,
  unmanned_system_operator: _ocsf.v1_6_0_dev.object.user #required,
  unmapped: string #print_json #optional,
}

// Process Activity events report when a process launches, injects, opens or
// terminates another process, successful or otherwise.
type _ocsf.v1_6_0_dev.process_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  actual_permissions: int64 #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  exit_code: int64 #recommended,
  injection_type: string #recommended,
  injection_type_id: int64 #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  module: _ocsf.v1_6_0_dev.object.module #recommended,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  requested_permissions: int64 #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// The base event is a generic and concrete event. It also defines a set of
// attributes available in most event classes. As a generic event that does not
// belong to any event category, it could be used to log events that are not
// otherwise defined by the schema.
type _ocsf.v1_6_0_dev.base_event = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Kernel Activity events report when an process creates, reads, or deletes a
// kernel resource.
type _ocsf.v1_6_0_dev.kernel_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  kernel: _ocsf.v1_6_0_dev.object.kernel #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Process Query events report information about running processes.
type _ocsf.v1_6_0_dev.process_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Server Message Block (SMB) Protocol Activity events report client/server
// connections sharing resources within the network.
type _ocsf.v1_6_0_dev.smb_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  client_dialects: list<string> #recommended,
  command: string #recommended,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dce_rpc: _ocsf.v1_6_0_dev.object.dce_rpc #optional,
  dialect: string #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  open_type: string #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  response: _ocsf.v1_6_0_dev.object.response #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  share: string #recommended,
  share_type: string #recommended,
  share_type_id: int64 #recommended,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  tree_uid: string #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Windows Resource Activity events report when a process accesses a Windows
// managed resource object, successful or otherwise.
type _ocsf.v1_6_0_dev.windows_resource_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  win_resource: _ocsf.v1_6_0_dev.object.win_resource #required,
}

// Module  Activity events report when a process loads or unloads the
// <code>module</code>.
type _ocsf.v1_6_0_dev.module_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  module: _ocsf.v1_6_0_dev.object.module #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Process Remediation Activity events report on attempts at remediating
// processes. It follows the MITRE countermeasures defined by the D3FEND™ <a
// target='_blank' href='https://d3fend.mitre.org/'>Matrix</a>. Sub-techniques
// will include Process, such as Process Termination or Kernel-based Process
// Isolation.
type _ocsf.v1_6_0_dev.process_remediation_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command_uid: string #required,
  count: int64 #optional,
  countermeasures: list<_ocsf.v1_6_0_dev.object.d3fend> #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  scan: _ocsf.v1_6_0_dev.object.scan #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Networks Query events report information about network adapters.
type _ocsf.v1_6_0_dev.networks_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  network_interfaces: list<_ocsf.v1_6_0_dev.object.network_interface> #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// The Vulnerability Finding event is a notification about weakness in an
// information system, system security procedures, internal controls, or
// implementation that could be exploited or triggered by a threat source. Note:
// if the event producer is a security control, the
// <code>security_control</code> profile should be applied and its
// <code>attacks</code> information, if present, should be duplicated into the
// <code>finding_info</code> object. <br><strong>Note: </strong>If the Finding
// is an incident, i.e. requires incident workflow, also apply the
// <code>incident</code> profile  or aggregate this finding into an
// <code>Incident Finding</code>.
type _ocsf.v1_6_0_dev.vulnerability_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  finding_info: _ocsf.v1_6_0_dev.object.finding_info #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resource: _ocsf.v1_6_0_dev.object.resource_details #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
  vulnerabilities: list<_ocsf.v1_6_0_dev.object.vulnerability> #required,
}

// Script Activity events report when a process executes a script.
type _ocsf.v1_6_0_dev.script_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  script: _ocsf.v1_6_0_dev.object.script #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Startup Item Query events report information about discovered items, e.g.,
// application components that are generally configured to run automatically.
type _ocsf.v1_6_0_dev.startup_item_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  startup_item: _ocsf.v1_6_0_dev.object.startup_item #required,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Remote Desktop Protocol (RDP) Activity events report post-authentication
// remote client connections between clients and servers over the network.
type _ocsf.v1_6_0_dev.rdp_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  capabilities: list<string> #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  certificate_chain: list<string> #recommended,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  identifier_cookie: string #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  keyboard_info: _ocsf.v1_6_0_dev.object.keyboard_info #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_ver: string #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remote_display: _ocsf.v1_6_0_dev.object.display #optional,
  request: _ocsf.v1_6_0_dev.object.request #recommended,
  response: _ocsf.v1_6_0_dev.object.response #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
}

// Device Inventory Info events report device inventory data that is either
// logged or proactively collected. For example, when collecting device
// information from a CMDB or running a network sweep of connected devices.
type _ocsf.v1_6_0_dev.device_inventory_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Job Query events report information about scheduled jobs.
type _ocsf.v1_6_0_dev.job_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  job: _ocsf.v1_6_0_dev.object.job #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Web Resources Activity events describe actions executed on a set of Web
// Resources.
type _ocsf.v1_6_0_dev.web_resources_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #recommended,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  web_resources: list<_ocsf.v1_6_0_dev.object.web_resource> #required,
  web_resources_result: list<_ocsf.v1_6_0_dev.object.web_resource> #recommended,
}

// Device Config State events report device configuration data, device
// assessments, and/or CIS Benchmark results.
type _ocsf.v1_6_0_dev.device_config_state = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  assessments: list<_ocsf.v1_6_0_dev.object.assessment> #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  cis_benchmark_result: _ocsf.v1_6_0_dev.object.cis_benchmark_result #recommended,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Registry Value Query events report information about discovered Windows
// registry values.
type _ocsf.v1_6_0_dev.registry_value_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  reg_value: _ocsf.v1_6_0_dev.object.reg_value #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Datastore events describe general activities (Read, Update, Query, Delete,
// etc.) which affect datastores or data within those datastores, e.g. (AWS RDS,
// AWS S3).
type _ocsf.v1_6_0_dev.datastore_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  database: _ocsf.v1_6_0_dev.object.database #recommended,
  databucket: _ocsf.v1_6_0_dev.object.databucket #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #recommended,
  http_response: _ocsf.v1_6_0_dev.object.http_response #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  table: _ocsf.v1_6_0_dev.object.table #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type: string #optional,
  type_id: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Network File Activity events report file activities traversing the network,
// including file storage services such as Box, MS OneDrive, or Google Drive.
type _ocsf.v1_6_0_dev.network_file_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #optional,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  expiration_time: time #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Scheduled Job Activity events report activities related to scheduled jobs or
// tasks.
type _ocsf.v1_6_0_dev.scheduled_job_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  job: _ocsf.v1_6_0_dev.object.job #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Data collected directly from devices that represents forensic information
// pulled, queried, or discovered from devices that may indicate malicious
// activity. It contains a number of child objects, each representing a distinct
// evidence domain (network connections, file artifacts, registry entries,
// etc.). When mapping raw telemetry data users should select Query Evidence and
// then the appropriate child object that best matches the evidence type.
type _ocsf.v1_6_0_dev.live_evidence_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_evidence: _ocsf.v1_6_0_dev.object.query_evidence #required,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Registry Key Activity events report when a process performs an action on a
// Windows registry key.
type _ocsf.v1_6_0_dev.registry_key_activity = record{
  access_mask: int64 #recommended,
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  create_mask: string #recommended,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  open_mask: int64 #recommended,
  prev_reg_key: _ocsf.v1_6_0_dev.object.reg_key #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  reg_key: _ocsf.v1_6_0_dev.object.reg_key #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// HTTP Activity events report HTTP connection and traffic information.
type _ocsf.v1_6_0_dev.http_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  http_cookies: list<_ocsf.v1_6_0_dev.object.http_cookie> #recommended,
  http_request: _ocsf.v1_6_0_dev.object.http_request #recommended,
  http_response: _ocsf.v1_6_0_dev.object.http_response #recommended,
  http_status: int64 #recommended,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Device Config State Change events report state changes that impact the
// security of the device.
type _ocsf.v1_6_0_dev.device_config_state_change = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  prev_security_level: string #recommended,
  prev_security_level_id: int64 #recommended,
  prev_security_states: list<_ocsf.v1_6_0_dev.object.security_state> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  security_level: string #recommended,
  security_level_id: int64 #recommended,
  security_states: list<_ocsf.v1_6_0_dev.object.security_state> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  state: string #optional,
  state_id: int64 #recommended,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// File Remediation Activity events report on attempts at remediating files. It
// follows the MITRE countermeasures defined by the D3FEND™ <a target='_blank'
// href='https://d3fend.mitre.org/'>Matrix</a>. Sub-techniques will include
// File, such as File Removal or Restore File.
type _ocsf.v1_6_0_dev.file_remediation_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command_uid: string #required,
  count: int64 #optional,
  countermeasures: list<_ocsf.v1_6_0_dev.object.d3fend> #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  scan: _ocsf.v1_6_0_dev.object.scan #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Cloud Resources Inventory Info events report cloud asset inventory data. This
// data can be either logged or proactively collected. For example, use this
// event class when creating an inventory of cloud resource information from a
// Configuration Management Database (CMDB), Cyber Asset Attack Surface
// Management (CAASM), direct public cloud service provider APIs, Software-as-a-
// Service (SaaS) APIs, or otherwise.
type _ocsf.v1_6_0_dev.cloud_resources_inventory_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  cloud: _ocsf.v1_6_0_dev.object.cloud #recommended,
  container: _ocsf.v1_6_0_dev.object.container #recommended,
  count: int64 #optional,
  database: _ocsf.v1_6_0_dev.object.database #recommended,
  databucket: _ocsf.v1_6_0_dev.object.databucket #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  idp: _ocsf.v1_6_0_dev.object.idp #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  region: string #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  table: _ocsf.v1_6_0_dev.object.table #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// API events describe general CRUD (Create, Read, Update, Delete) API
// activities, e.g. (AWS Cloudtrail)
type _ocsf.v1_6_0_dev.api_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  api: _ocsf.v1_6_0_dev.object.api #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #recommended,
  http_response: _ocsf.v1_6_0_dev.object.http_response #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Kernel Extension events report when a driver/extension is loaded or unloaded
// into the kernel
type _ocsf.v1_6_0_dev.kernel_extension_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  driver: _ocsf.v1_6_0_dev.object.kernel_driver #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// File System Activity events report when a process performs an action on a
// file or folder.
type _ocsf.v1_6_0_dev.file_system_activity = record{
  access_mask: int64 #optional,
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  component: string #recommended,
  connection_uid: string #optional,
  count: int64 #optional,
  create_mask: string #recommended,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  file_diff: string #recommended,
  file_result: _ocsf.v1_6_0_dev.object.file #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Application Lifecycle events report installation, removal, start, stop of an
// application or service.
type _ocsf.v1_6_0_dev.application_lifecycle = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app: _ocsf.v1_6_0_dev.object.product #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Registry Value Activity events reports when a process performs an action on a
// Windows registry value.
type _ocsf.v1_6_0_dev.registry_value_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  prev_reg_value: _ocsf.v1_6_0_dev.object.reg_value #optional,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  reg_value: _ocsf.v1_6_0_dev.object.reg_value #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// DHCP Activity events report MAC to IP assignment via DHCP from a client or
// server.
type _ocsf.v1_6_0_dev.dhcp_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  is_renewal: bool #recommended,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  lease_dur: int64 #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  relay: _ocsf.v1_6_0_dev.object.network_interface #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  transaction_uid: string #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Compliance Finding events describe results of evaluations performed against
// resources, to check compliance with various Industry Frameworks or Security
// Standards such as <code>NIST SP 800-53, CIS AWS Foundations Benchmark v1.4.0,
// ISO/IEC 27001</code> etc. Note: if the event producer is a security control,
// the <code>security_control</code> profile should be applied and its
// <code>attacks</code> information, if present, should be duplicated into the
// <code>finding_info</code> object. <br><strong>Note: </strong>If the Finding
// is an incident, i.e. requires incident workflow, also apply the
// <code>incident</code> profile or aggregate this finding into an
// <code>Incident Finding</code>.
type _ocsf.v1_6_0_dev.compliance_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  compliance: _ocsf.v1_6_0_dev.object.compliance #required,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  evidences: list<_ocsf.v1_6_0_dev.object.evidences> #optional,
  finding_info: _ocsf.v1_6_0_dev.object.finding_info #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #recommended,
  resource: _ocsf.v1_6_0_dev.object.resource_details #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
}

// Authentication events report authentication session activities, including
// user attempts to log on or log off, regardless of success, as well as other
// key stages within the authentication process. These events are typically
// generated by authentication services, such as Kerberos, OIDC, or SAML, and
// may include information about the user, the authentication method used, and
// the status of the authentication attempt.
type _ocsf.v1_6_0_dev.authentication = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  auth_factors: list<_ocsf.v1_6_0_dev.object.auth_factor> #optional,
  auth_protocol: string #recommended,
  auth_protocol_id: int64 #recommended,
  authentication_token: _ocsf.v1_6_0_dev.object.authentication_token #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  certificate: _ocsf.v1_6_0_dev.object.certificate #recommended,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  is_cleartext: bool #optional,
  is_mfa: bool #recommended,
  is_new_logon: bool #optional,
  is_remote: bool #recommended,
  logon_process: _ocsf.v1_6_0_dev.object.process #optional,
  logon_type: string #recommended,
  logon_type_id: int64 #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  service: _ocsf.v1_6_0_dev.object.service #recommended,
  session: _ocsf.v1_6_0_dev.object.session #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
}

// User Query events report user data that have been discovered, queried, polled
// or searched. This event differs from User Inventory as it describes the
// result of a targeted search by filtering a subset of user attributes.
type _ocsf.v1_6_0_dev.user_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
}

// Network Connection Query events report information about active network
// connections.
type _ocsf.v1_6_0_dev.network_connection_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  state: string #recommended,
  state_id: int64 #required,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Registry Key Query events report information about discovered Windows
// registry keys.
type _ocsf.v1_6_0_dev.registry_key_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  reg_key: _ocsf.v1_6_0_dev.object.reg_key #required,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Software Inventory Info events report device software inventory data that is
// either logged or proactively collected. For example, when collecting device
// information from a CMDB or running a network sweep of connected devices.
type _ocsf.v1_6_0_dev.software_inventory_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  package: _ocsf.v1_6_0_dev.object.package #recommended,
  product: _ocsf.v1_6_0_dev.object.product #optional,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  sbom: _ocsf.v1_6_0_dev.object.sbom #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// DNS Activity events report DNS queries and answers as seen on the network.
type _ocsf.v1_6_0_dev.dns_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  answers: list<_ocsf.v1_6_0_dev.object.dns_answer> #recommended,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #optional,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  query: _ocsf.v1_6_0_dev.object.dns_query #recommended,
  query_time: time #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  rcode: string #recommended,
  rcode_id: int64 #recommended,
  response_time: time #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #optional,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// File Query events report information about files that are present on the
// system.
type _ocsf.v1_6_0_dev.file_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// User Access Management events report management updates to a user's
// privileges.
type _ocsf.v1_6_0_dev.user_access_management = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  privileges: list<string> #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resource: _ocsf.v1_6_0_dev.object.resource_details #recommended,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
}

// Authorize Session events report privileges or groups assigned to a new user
// session, usually at login time.
type _ocsf.v1_6_0_dev.authorize_session = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  group: _ocsf.v1_6_0_dev.object.group #recommended,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  privileges: list<string> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  session: _ocsf.v1_6_0_dev.object.session #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
}

// Remediation Activity events report on attempts at remediating a compromised
// device or computer network. It follows the MITRE countermeasures defined by
// the D3FEND™ <a target='_blank' href='https://d3fend.mitre.org/'>Matrix</a>.
type _ocsf.v1_6_0_dev.remediation_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command_uid: string #required,
  count: int64 #optional,
  countermeasures: list<_ocsf.v1_6_0_dev.object.d3fend> #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  scan: _ocsf.v1_6_0_dev.object.scan #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Tunnel Activity events report secure tunnel establishment (such as VPN),
// teardowns, renewals, and other network tunnel specific actions.
type _ocsf.v1_6_0_dev.tunnel_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #optional,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_name: string #optional,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  session: _ocsf.v1_6_0_dev.object.session #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #optional,
  tunnel_interface: _ocsf.v1_6_0_dev.object.network_interface #recommended,
  tunnel_type: string #recommended,
  tunnel_type_id: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
}

// Entity Management events report activity by a managed client, a micro
// service, or a user at a management console. The activity can be a create,
// read, update, and delete operation on a managed entity.
type _ocsf.v1_6_0_dev.entity_management = record{
  access_list: list<string> #optional,
  access_mask: int64 #optional,
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #recommended,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  entity: _ocsf.v1_6_0_dev.object.managed_entity #required,
  entity_result: _ocsf.v1_6_0_dev.object.managed_entity #recommended,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// A Data Security Finding describes detections or alerts generated by various
// data security products such as Data Loss Prevention (DLP), Data
// Classification, Secrets Management, Digital Rights Management (DRM), Data
// Security Posture Management (DSPM), and similar tools. These detections or
// alerts can be created using fingerprinting, statistical analysis, machine
// learning or other methodologies. The finding describes the actors and
// endpoints who accessed or own the sensitive data, as well as the resources
// which store the sensitive data. Note: if the event producer is a security
// control, the <code>security_control</code> profile should be applied and its
// <code>attacks</code> information, if present, should be duplicated into the
// <code>finding_info</code> object. <br><strong>Note: </strong>If the Finding
// is an incident, i.e. requires incident workflow, also apply the
// <code>incident</code> profile  or aggregate this finding into an
// <code>Incident Finding</code>.
type _ocsf.v1_6_0_dev.data_security_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  data_security: _ocsf.v1_6_0_dev.object.data_security #recommended,
  database: _ocsf.v1_6_0_dev.object.database #recommended,
  databucket: _ocsf.v1_6_0_dev.object.databucket #recommended,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #recommended,
  finding_info: _ocsf.v1_6_0_dev.object.finding_info #required,
  impact: string #optional,
  impact_id: int64 #optional,
  impact_score: int64 #optional,
  is_alert: bool #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  risk_details: string #optional,
  risk_level: string #optional,
  risk_level_id: int64 #optional,
  risk_score: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  table: _ocsf.v1_6_0_dev.object.table #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
}

// Admin Group Query events report information about administrative groups.
type _ocsf.v1_6_0_dev.admin_group_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  group: _ocsf.v1_6_0_dev.object.group #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  users: list<_ocsf.v1_6_0_dev.object.user> #recommended,
}

// A Detection Finding describes detections or alerts generated by security
// products using correlation engines, detection engines or other methodologies.
// Note: if the event producer is a security control, the
// <code>security_control</code> profile should be applied and its
// <code>attacks</code> information, if present, should be duplicated into the
// <code>finding_info</code> object. <br><strong>Note: </strong>If the Finding
// is an incident, i.e. requires incident workflow, also apply the
// <code>incident</code> profile  or aggregate this finding into an
// <code>Incident Finding</code>.
type _ocsf.v1_6_0_dev.detection_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  anomaly_analyses: list<_ocsf.v1_6_0_dev.object.anomaly_analysis> #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  evidences: list<_ocsf.v1_6_0_dev.object.evidences> #recommended,
  finding_info: _ocsf.v1_6_0_dev.object.finding_info #required,
  impact: string #optional,
  impact_id: int64 #optional,
  impact_score: int64 #optional,
  is_alert: bool #recommended,
  malware: list<_ocsf.v1_6_0_dev.object.malware> #optional,
  malware_scan_info: _ocsf.v1_6_0_dev.object.malware_scan_info #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  risk_details: string #optional,
  risk_level: string #optional,
  risk_level_id: int64 #optional,
  risk_score: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #optional,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
  vulnerabilities: list<_ocsf.v1_6_0_dev.object.vulnerability> #optional,
}

// Operating System Patch State reports the installation of an OS patch to a
// device and any associated knowledgebase articles.
type _ocsf.v1_6_0_dev.operating_system_patch_state = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  kb_article_list: list<_ocsf.v1_6_0_dev.object.kb_article> #recommended,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Windows Service Activity events report when a process interacts with the
// Service Control Manager.
type _ocsf.v1_6_0_dev.windows_service_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  win_service: _ocsf.v1_6_0_dev.object.win_service #required,
}

// SSH Activity events report remote client connections to a server using the
// Secure Shell (SSH) Protocol.
type _ocsf.v1_6_0_dev.ssh_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  auth_type: string #recommended,
  auth_type_id: int64 #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  client_hassh: _ocsf.v1_6_0_dev.object.hassh #recommended,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_ver: string #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  server_hassh: _ocsf.v1_6_0_dev.object.hassh #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Email URL Activity events report URLs within an email.
type _ocsf.v1_6_0_dev.email_url_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  email_uid: string #required,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  url: _ocsf.v1_6_0_dev.object.url #required,
}

// User Inventory Info events report user inventory data that is either logged
// or proactively collected. For example, when collecting user information from
// Active Directory entries.
type _ocsf.v1_6_0_dev.user_inventory_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #required,
}

// Network Remediation Activity events report on attempts at remediating
// computer networks. It follows the MITRE countermeasures defined by the
// D3FEND™ <a target='_blank' href='https://d3fend.mitre.org/'>Matrix</a>.
// Techniques and Sub-techniques will include Network, such as Network Isolation
// or Network Traffic Filtering.
type _ocsf.v1_6_0_dev.network_remediation_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command_uid: string #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #required,
  count: int64 #optional,
  countermeasures: list<_ocsf.v1_6_0_dev.object.d3fend> #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  remediation: _ocsf.v1_6_0_dev.object.remediation #optional,
  scan: _ocsf.v1_6_0_dev.object.scan #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Scan events report the start, completion, and results of a scan job. The scan
// event includes the number of items that were scanned and the number of
// detections that were resolved.
type _ocsf.v1_6_0_dev.scan_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command_uid: string #recommended,
  count: int64 #optional,
  duration: int64 #recommended,
  end_time: time #recommended,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  num_detections: int64 #recommended,
  num_files: int64 #recommended,
  num_folders: int64 #recommended,
  num_network_items: int64 #recommended,
  num_processes: int64 #recommended,
  num_registry_items: int64 #recommended,
  num_resolutions: int64 #recommended,
  num_skipped_items: int64 #recommended,
  num_trusted_items: int64 #recommended,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  policy: _ocsf.v1_6_0_dev.object.policy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  scan: _ocsf.v1_6_0_dev.object.scan #required,
  schedule_uid: string #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #recommended,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  total: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Security Finding events describe findings, detections, anomalies, alerts
// and/or actions performed by security products
type _ocsf.v1_6_0_dev.security_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  analytic: _ocsf.v1_6_0_dev.object.analytic #recommended,
  attacks: list<_ocsf.v1_6_0_dev.object.attack> #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  cis_csc: list<_ocsf.v1_6_0_dev.object.cis_csc> #optional,
  class_name: string #optional,
  class_uid: int64 #required,
  compliance: _ocsf.v1_6_0_dev.object.compliance #optional,
  confidence: string #recommended,
  confidence_id: int64 #recommended,
  confidence_score: int64 #recommended,
  count: int64 #optional,
  data_sources: list<string> #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  evidence: string #print_json #optional,
  finding: _ocsf.v1_6_0_dev.object.finding #required,
  impact: string #recommended,
  impact_id: int64 #recommended,
  impact_score: int64 #recommended,
  kill_chain: list<_ocsf.v1_6_0_dev.object.kill_chain_phase> #optional,
  malware: list<_ocsf.v1_6_0_dev.object.malware> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  nist: list<string> #optional,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #optional,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resources: list<_ocsf.v1_6_0_dev.object.resource_details> #recommended,
  risk_level: string #recommended,
  risk_level_id: int64 #recommended,
  risk_score: int64 #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  state: string #optional,
  state_id: int64 #required,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vulnerabilities: list<_ocsf.v1_6_0_dev.object.vulnerability> #optional,
}

// The Network Time Protocol (NTP) Activity events report instances of remote
// clients synchronizing their clocks with an NTP server, as observed on the
// network.
type _ocsf.v1_6_0_dev.ntp_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  delay: int64 #recommended,
  dispersion: int64 #recommended,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  precision: int64 #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  stratum: string #recommended,
  stratum_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  version: string #required,
}

// An Incident Finding reports the creation, update, or closure of security
// incidents as a result of detections and/or analytics. <br><strong>Note:
// </strong><code>Incident Finding</code> implicitly includes the
// <code>incident</code> profile and it should be added to the
// <code>metadata.profiles[]</code> array.
type _ocsf.v1_6_0_dev.incident_finding = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  assignee: _ocsf.v1_6_0_dev.object.user #optional,
  assignee_group: _ocsf.v1_6_0_dev.object.group #optional,
  attacks: list<_ocsf.v1_6_0_dev.object.attack> #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  comment: string #optional,
  confidence: string #optional,
  confidence_id: int64 #recommended,
  confidence_score: int64 #optional,
  count: int64 #optional,
  desc: string #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  finding_info_list: list<_ocsf.v1_6_0_dev.object.finding_info> #required,
  impact: string #recommended,
  impact_id: int64 #recommended,
  impact_score: int64 #recommended,
  is_suspected_breach: bool #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  priority: string #optional,
  priority_id: int64 #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_url: string #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #required,
  ticket: _ocsf.v1_6_0_dev.object.ticket #optional,
  tickets: list<_ocsf.v1_6_0_dev.object.ticket> #optional,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  vendor_attributes: _ocsf.v1_6_0_dev.object.vendor_attributes #optional,
  verdict: string #recommended,
  verdict_id: int64 #recommended,
}

// Group Management events report management updates to a group, including
// updates to membership and permissions.
type _ocsf.v1_6_0_dev.group_management = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  group: _ocsf.v1_6_0_dev.object.group #required,
  http_request: _ocsf.v1_6_0_dev.object.http_request #optional,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  privileges: list<string> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  resource: _ocsf.v1_6_0_dev.object.resource_details #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  user: _ocsf.v1_6_0_dev.object.user #recommended,
}

// File Hosting Activity events report the actions taken by file management
// applications, including file sharing servers like Sharepoint and services
// such as Box, MS OneDrive, Google Drive, or network file share services.
type _ocsf.v1_6_0_dev.file_hosting_activity = record{
  access_list: list<string> #optional,
  access_mask: int64 #optional,
  access_result: string #print_json #optional,
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #optional,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  expiration_time: time #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  file_result: _ocsf.v1_6_0_dev.object.file #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  share: string #optional,
  share_type: string #optional,
  share_type_id: int64 #optional,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// OSINT Inventory Info events report open source intelligence or threat
// intelligence inventory data that is either logged or proactively collected.
// For example, when collecting OSINT information from Threat Intelligence
// Platforms (TIPs) or Extended Detection and Response (XDR) platforms, or
// collecting data from OSINT or other generic threat intelligence and
// enrichment feeds such as APIs and datastores.
type _ocsf.v1_6_0_dev.osint_inventory_info = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  osint: list<_ocsf.v1_6_0_dev.object.osint> #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// File Transfer Protocol (FTP) Activity events report file transfers between a
// server and a client as seen on the network.
type _ocsf.v1_6_0_dev.ftp_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  app_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  codes: list<int64> #recommended,
  command: string #recommended,
  command_responses: list<string> #recommended,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #optional,
  ja4_fingerprint_list: list<_ocsf.v1_6_0_dev.object.ja4_fingerprint> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  name: string #recommended,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  port: int64 #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #recommended,
  type: string #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Folder Query events report information about folders that are present on the
// system.
type _ocsf.v1_6_0_dev.folder_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  folder: _ocsf.v1_6_0_dev.object.file #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Peripheral Device Query events report information about peripheral devices.
type _ocsf.v1_6_0_dev.peripheral_device_query = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  peripheral_device: _ocsf.v1_6_0_dev.object.peripheral_device #required,
  query_info: _ocsf.v1_6_0_dev.object.query_info #recommended,
  query_result: string #recommended,
  query_result_id: int64 #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Web Resource Access Activity events describe successful/failed attempts to
// access a web resource over HTTP.
type _ocsf.v1_6_0_dev.web_resource_access_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  http_request: _ocsf.v1_6_0_dev.object.http_request #required,
  http_response: _ocsf.v1_6_0_dev.object.http_response #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  proxy: _ocsf.v1_6_0_dev.object.network_proxy #optional,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
  web_resources: list<_ocsf.v1_6_0_dev.object.web_resource> #required,
}

// Email File Activity events report files within emails.
type _ocsf.v1_6_0_dev.email_file_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  email_uid: string #required,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  file: _ocsf.v1_6_0_dev.object.file #required,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Memory Activity events report when a process has memory allocated,
// read/modified, or other manipulation activities - such as a buffer overflow
// or turning off data execution protection (DEP).
type _ocsf.v1_6_0_dev.memory_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  actor: _ocsf.v1_6_0_dev.object.actor #required,
  actual_permissions: int64 #recommended,
  base_address: string #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  device: _ocsf.v1_6_0_dev.object.device #required,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  process: _ocsf.v1_6_0_dev.object.process #required,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  requested_permissions: int64 #recommended,
  severity: string #optional,
  severity_id: int64 #required,
  size: int64 #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Airborne Broadcast Activity events report the activity of any aircraft or
// unmanned system as reported and tracked by Automatic Dependent Surveillance -
// Broadcast (ADS-B) receivers. Based on the ADS-B standards described in <a
// target='_blank' href='https://www.ecfr.gov/current/title-14/chapter-
// I/subchapter-F/part-91#91.225'>Code of Federal Regulations (CFR) Title 14
// Chapter I Subchapter F Part 91</a> and in other general Federal Aviation
// Administration (FAA) supplemental orders and guidance described <a
// target='_blank' href='https://www.faa.gov/about/office_org/headquarters_offic
// es/avs/offices/afx/afs/afs400/afs410/ads-b'>here</a>.
type _ocsf.v1_6_0_dev.airborne_broadcast_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  aircraft: _ocsf.v1_6_0_dev.object.aircraft #recommended,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  connection_info: _ocsf.v1_6_0_dev.object.network_connection_info #recommended,
  count: int64 #optional,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_name: string #recommended,
  proxy_endpoint: _ocsf.v1_6_0_dev.object.network_proxy #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  rssi: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #optional,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  tls: _ocsf.v1_6_0_dev.object.tls #optional,
  traffic: _ocsf.v1_6_0_dev.object.network_traffic #optional,
  type_name: string #optional,
  type_uid: int64 #required,
  unmanned_aerial_system: _ocsf.v1_6_0_dev.object.unmanned_aerial_system #required,
  unmanned_system_operating_area: _ocsf.v1_6_0_dev.object.unmanned_system_operating_area #recommended,
  unmanned_system_operator: _ocsf.v1_6_0_dev.object.user #required,
  unmapped: string #print_json #optional,
}

// Email Activity events report SMTP protocol and email activities including
// those with embedded URLs and files. See the <code>Email</code> object for
// details.
type _ocsf.v1_6_0_dev.email_activity = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  attempt: int64 #optional,
  banner: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  command: string #recommended,
  count: int64 #optional,
  direction: string #optional,
  direction_id: int64 #required,
  dst_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  duration: int64 #optional,
  email: _ocsf.v1_6_0_dev.object.email #required,
  email_auth: _ocsf.v1_6_0_dev.object.email_auth #recommended,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  message_trace_uid: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  protocol_name: string #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  smtp_hello: string #recommended,
  src_endpoint: _ocsf.v1_6_0_dev.object.network_endpoint #recommended,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}

// Application Error events describe issues with an applications. The error
// message should be put in the event's <code>message</code> attribute. The
// <code>metadata.product</code> attribute can be used to capture the
// originating application information. The <code>host</code> profile can used
// to include the generating device information. This class is helpful (and
// originally intended for) applications that generate and/or handle OCSF
// events. This class can also be used for errors in upstream products and
// services.
type _ocsf.v1_6_0_dev.application_error = record{
  activity_id: int64 #required,
  activity_name: string #optional,
  category_name: string #optional,
  category_uid: int64 #required,
  class_name: string #optional,
  class_uid: int64 #required,
  count: int64 #optional,
  duration: int64 #optional,
  end_time: time #optional,
  enrichments: list<_ocsf.v1_6_0_dev.object.enrichment> #optional,
  message: string #recommended,
  metadata: _ocsf.v1_6_0_dev.object.metadata #required,
  observables: list<_ocsf.v1_6_0_dev.object.observable> #recommended,
  raw_data: string #optional,
  raw_data_size: int64 #optional,
  severity: string #optional,
  severity_id: int64 #required,
  start_time: time #optional,
  status: string #recommended,
  status_code: string #recommended,
  status_detail: string #recommended,
  status_id: int64 #recommended,
  time: time #required,
  timezone_offset: int64 #recommended,
  type_name: string #optional,
  type_uid: int64 #required,
  unmapped: string #print_json #optional,
}
