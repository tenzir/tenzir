[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tenzir"
version = "5.19.0"
description = "A security telemetry engine for detection and response"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.9"
license = { text = "BSD-3-Clause" }
authors = [
  { name = "Tenzir", email = "engineering@tenzir.com" },
]
maintainers = [
  { name = "Tenzir", email = "engineering@tenzir.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Plugins",
    "License :: OSI Approved :: BSD License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator",
    "Topic :: Security",
    "Topic :: Software Development :: Object Brokering",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
  "pyarrow>=11,<19.0.1",
  "dynaconf>=3.2,<4.0",
]

[project.optional-dependencies]
module = ["numpy>=1.24,<3.0"]
operator = [
  "python-box>=7.0,<8.0",
  "pandas>=2.1.3,<3.0",
  "aiohttp>=3.8,<4.0",
]

[project.scripts]
tenzir = "tenzir._bin.tenzir:main"
tenzir-ctl = "tenzir._bin.tenzir_ctl:main"

[dependency-groups]
dev = [
  "pytest>=8.3,<9.0",
  "pytest-asyncio>=0.25.2,<0.26.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto" # required for async fixtures

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
  "dynaconf",
  "pyarrow",
]
ignore_missing_imports = true

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/ for explanations.
#select = ["E2", "E4", "E7", "E9", "F", "B", "I", "Q", "W"]
select = ["ALL"]
ignore = ["FA", "D1"]

[tool.setuptools]
packages = ["tenzir"]
include-package-data = true

[tool.setuptools.package-data]
"tenzir" = [
  "bin/**",
  "libexec/**",
  "share/**",
]
