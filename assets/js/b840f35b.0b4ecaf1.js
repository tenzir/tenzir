"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[61825],{15680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>h});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},y="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),y=p(n),u=r,h=y["".concat(s,".").concat(u)]||y[u]||c[u]||i;return n?t.createElement(h,o(o({ref:a},d),{},{components:n})):t.createElement(h,o({ref:a},d))}));function h(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[y]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25921:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>f,contentTitle:()=>m,default:()=>C,frontMatter:()=>h,metadata:()=>g,toc:()=>x});var t=n(15680),r=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,d=(e,a,n)=>a in e?r(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,y=(e,a)=>{for(var n in a||(a={}))s.call(a,n)&&d(e,n,a[n]);if(l)for(var n of l(a))p.call(a,n)&&d(e,n,a[n]);return e},c=(e,a)=>i(e,o(a)),u=(e,a)=>{var n={};for(var t in e)s.call(e,t)&&a.indexOf(t)<0&&(n[t]=e[t]);if(null!=e&&l)for(var t of l(e))a.indexOf(t)<0&&p.call(e,t)&&(n[t]=e[t]);return n};const h={sidebar_custom_props:{operator:{transformation:!0}}},m="chart",g={unversionedId:"operators/chart",id:"version-v4.30/operators/chart",title:"chart",description:"Add metadata to a schema, necessary for rendering as a chart.",source:"@site/versioned_docs/version-v4.30/operators/chart.md",sourceDirName:"operators",slug:"/operators/chart",permalink:"/operators/chart",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-v4.30/operators/chart.md",tags:[],version:"v4.30",frontMatter:{sidebar_custom_props:{operator:{transformation:!0}}},sidebar:"docsSidebar",previous:{title:"Operators",permalink:"/operators"},next:{title:"lookup",permalink:"/operators/lookup"}},f={},x=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>-x|--x-axis &lt;fields&gt;</code> (<code>line</code>, <code>area</code>, and <code>bar</code> charts only)",id:"-x--x-axis-fields-line-area-and-bar-charts-only",level:3},{value:"<code>-y|--y-axis &lt;fields&gt;</code> (<code>line</code>, <code>area</code>, and <code>bar</code> charts only)",id:"-y--y-axis-fields-line-area-and-bar-charts-only",level:3},{value:"<code>--position &lt;position&gt;</code> (<code>line</code>, <code>area</code>, and <code>bar</code> charts only)",id:"--position-position-line-area-and-bar-charts-only",level:3},{value:"<code>--x-axis-type &lt;x-axis-type&gt;</code> (<code>line</code>, <code>area</code>, and <code>bar</code> charts only)",id:"--x-axis-type-x-axis-type-line-area-and-bar-charts-only",level:3},{value:"<code>--y-axis-type &lt;y-axis-type&gt;</code> (<code>line</code>, <code>area</code>, and <code>bar</code> charts only)",id:"--y-axis-type-y-axis-type-line-area-and-bar-charts-only",level:3},{value:"<code>--name &lt;field&gt;</code> (<code>pie</code> chart only)",id:"--name-field-pie-chart-only",level:3},{value:"<code>--value &lt;fields&gt;</code> (<code>pie</code> chart only)",id:"--value-fields-pie-chart-only",level:3},{value:"<code>--limit &lt;uint&gt;</code>",id:"--limit-uint",level:3},{value:"Examples",id:"examples",level:2}],b={toc:x},v="wrapper";function C(e){var a=e,{components:n}=a,r=u(a,["components"]);return(0,t.yg)(v,c(y(y({},b),r),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h1",y({},{id:"chart"}),"chart"),(0,t.yg)("p",null,"Add metadata to a schema, necessary for rendering as a chart."),(0,t.yg)("h2",y({},{id:"synopsis"}),"Synopsis"),(0,t.yg)("pre",null,(0,t.yg)("code",y({parentName:"pre"},{}),"chart line [-x|--x-axis <fields>] [-y|--y-axis <field>]\n           [--x-axis-type <x-axis-type>]  [--y-axis-type <y-axis-type>]\n           [--limit <uint>]\nchart area [-x|--x-axis <fields>] [-y|--y-axis <field>]\n           [--x-axis-type <x-axis-type>]  [--y-axis-type <y-axis-type>]\n           [--limit <uint>]\nchart bar  [-x|--x-axis <fields>] [-y|--y-axis <field>]\n           [--x-axis-type <x-axis-type>]  [--y-axis-type <y-axis-type>]\n           [--limit <uint>]\nchart pie  [--name <field>] [--value <fields>]\n           [--limit <uint>]\n")),(0,t.yg)("h2",y({},{id:"description"}),"Description"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"chart")," operator adds attributes to the schema of the input events,\nthat are used to guide rendering of the data as a chart.\nThe operator does no rendering itself."),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"fields")," option value is either the name of a single field, or a\ncomma-separated list of multiple field names, e.g., ",(0,t.yg)("inlineCode",{parentName:"p"},"foo,bar,baz"),"."),(0,t.yg)("h3",y({},{id:"-x--x-axis-fields-line-area-and-bar-charts-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"-x|--x-axis <fields>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"line"),", ",(0,t.yg)("inlineCode",{parentName:"h3"},"area"),", and ",(0,t.yg)("inlineCode",{parentName:"h3"},"bar")," charts only)"),(0,t.yg)("p",null,"Sets the field used for the X-axis."),(0,t.yg)("p",null,"Values in this field must be strictly increasing (sorted in ascending order,\nwithout duplicates) when creating a ",(0,t.yg)("inlineCode",{parentName:"p"},"line")," or ",(0,t.yg)("inlineCode",{parentName:"p"},"area")," chart, or unique when\ncreating a ",(0,t.yg)("inlineCode",{parentName:"p"},"bar")," chart."),(0,t.yg)("p",null,"Defaults to the first field in the schema."),(0,t.yg)("h3",y({},{id:"-y--y-axis-fields-line-area-and-bar-charts-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"-y|--y-axis <fields>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"line"),", ",(0,t.yg)("inlineCode",{parentName:"h3"},"area"),", and ",(0,t.yg)("inlineCode",{parentName:"h3"},"bar")," charts only)"),(0,t.yg)("p",null,"Sets the fields used for the Y-axis."),(0,t.yg)("p",null,"Defaults to every field but the first one."),(0,t.yg)("h3",y({},{id:"--position-position-line-area-and-bar-charts-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--position <position>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"line"),", ",(0,t.yg)("inlineCode",{parentName:"h3"},"area"),", and ",(0,t.yg)("inlineCode",{parentName:"h3"},"bar")," charts only)"),(0,t.yg)("p",null,"Controls how the values are grouped when rendered as a chart.\nPossible values are ",(0,t.yg)("inlineCode",{parentName:"p"},"grouped")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"stacked"),"."),(0,t.yg)("p",null,"Defaults to ",(0,t.yg)("inlineCode",{parentName:"p"},"grouped"),"."),(0,t.yg)("h3",y({},{id:"--x-axis-type-x-axis-type-line-area-and-bar-charts-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--x-axis-type <x-axis-type>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"line"),", ",(0,t.yg)("inlineCode",{parentName:"h3"},"area"),", and ",(0,t.yg)("inlineCode",{parentName:"h3"},"bar")," charts only)"),(0,t.yg)("p",null,"Sets the x-axis scale type.\nPossible values are ",(0,t.yg)("inlineCode",{parentName:"p"},"linear")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"log"),"."),(0,t.yg)("p",null,"Defaults to ",(0,t.yg)("inlineCode",{parentName:"p"},"linear"),"."),(0,t.yg)("h3",y({},{id:"--y-axis-type-y-axis-type-line-area-and-bar-charts-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--y-axis-type <y-axis-type>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"line"),", ",(0,t.yg)("inlineCode",{parentName:"h3"},"area"),", and ",(0,t.yg)("inlineCode",{parentName:"h3"},"bar")," charts only)"),(0,t.yg)("p",null,"Sets the y-axis scale type.\nPossible values are ",(0,t.yg)("inlineCode",{parentName:"p"},"linear")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"log"),"."),(0,t.yg)("p",null,"Defaults to ",(0,t.yg)("inlineCode",{parentName:"p"},"linear"),"."),(0,t.yg)("h3",y({},{id:"--name-field-pie-chart-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--name <field>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"pie")," chart only)"),(0,t.yg)("p",null,"Sets the field used for the names of the segments."),(0,t.yg)("p",null,"Values in this field must be unique."),(0,t.yg)("p",null,"Defaults to the first field in the schema."),(0,t.yg)("h3",y({},{id:"--value-fields-pie-chart-only"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--value <fields>")," (",(0,t.yg)("inlineCode",{parentName:"h3"},"pie")," chart only)"),(0,t.yg)("p",null,"Sets the fields used for the value of a segment."),(0,t.yg)("p",null,"Defaults to every field but the first one."),(0,t.yg)("h3",y({},{id:"--limit-uint"}),(0,t.yg)("inlineCode",{parentName:"h3"},"--limit <uint>")),(0,t.yg)("p",null,"Limit the chart to ",(0,t.yg)("inlineCode",{parentName:"p"},"<uint>")," data points. This will discard any further events\nand raise a warning."),(0,t.yg)("p",null,"Defaults to 10,000."),(0,t.yg)("h2",y({},{id:"examples"}),"Examples"),(0,t.yg)("p",null,"Render most common ",(0,t.yg)("inlineCode",{parentName:"p"},"src_ip")," values in ",(0,t.yg)("inlineCode",{parentName:"p"},"suricata.flow")," events as a bar chart:"),(0,t.yg)("pre",null,(0,t.yg)("code",y({parentName:"pre"},{}),'export\n| where #schema == "suricata.flow"\n| top src_ip\n/* -x and -y default to `src_ip` and `count` */\n| chart bar\n')),(0,t.yg)("p",null,"Render historical import throughput statistics as a line chart:"),(0,t.yg)("pre",null,(0,t.yg)("code",y({parentName:"pre"},{}),'metrics\n| where #schema == "tenzir.metrics.operator"\n| where source == true\n| summarize bytes=sum(output.approx_bytes) by timestamp resolution 1s\n| sort timestamp\n| chart line -x timestamp -y bytes --y-axis-type "log"\n')))}C.isMDXComponent=!0}}]);